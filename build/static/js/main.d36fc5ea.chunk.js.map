{"version":3,"sources":["redux/reducers/initialState.js","redux/actions/actionTypes.js","utils/dataFormat.js","redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/modal.js","redux/reducers/list.js","redux/reducers/socket.js","redux/reducers/task.js","redux/reducers/visibility.js","redux/reducers/apiStatus.js","api/authApi.js","components/common/Loading.js","components/common/Login.js","components/common/PageNotFound.js","components/common/Header.js","components/Sidebar/AddListContainer.js","components/Sidebar/List.js","redux/actions/modalActions.js","api/listApi.js","redux/actions/visibilityActions.js","utils/draggable.js","components/Sidebar/DraggableListContainer.js","redux/actions/listActions.js","components/Sidebar/index.js","components/modals/AddList.js","components/modals/DeleteItem.js","components/modals/EditList.js","components/modals/index.js","components/Main/TitleBar.js","api/taskApi.js","components/Task/TaskAdd.js","components/Task/Task.js","redux/actions/taskActions.js","components/Task/TaskDraggableContainer.js","components/Main/TaskContainer.js","api/subtaskApi.js","components/Task/Subtask.js","redux/actions/subtaskActions.js","components/Task/TaskEdit.js","redux/actions/apiStatusActions.js","components/Main/index.js","components/App.js","redux/configureStore.js","components/Entry.js","utils/socket.js","redux/actions/authActions.js","redux/actions/socketActions.js","index.js","media/loading.gif","media/bean.png"],"names":["reducers_initialState","auth","isLoading","socket","modals","errors","lists","keyOrder","keyHash","tasks","activeTasks","completedTasks","visibility","apiStatus","BEGIN_API_CALL","END_API_CALL","LOADING_USER_COMPLETE","GET_USER_SUCCESS","ADD_SOCKET","OPEN_MODAL","REORDER_LIST","GET_LIST_SUCCESS","ADD_LIST_SUCCESS","UPDATE_LIST_SUCCESS","DELETE_LIST_SUCCESS","GET_TASK_SUCCESS","ADD_TASK_SUCCESS","TOGGLE_TASK_SUCCESS","CLEAR_TASKS_SUCCESS","ADD_SUBTASK_SUCCESS","DELETE_SUBTASK_SUCCESS","UPDATE_VISIBILITY","formatDataStructure","data","sort","a","b","order","map","item","id","forEach","addNewData","state","newData","newState","Object","objectSpread","push","formatTaskStructure","filter","task","isCompleted","Array","isArray","subtasks","addNewTask","concat","toConsumableArray","subtasksExists","updateToggle","subtask","newDataStates","values","addSubtask","TaskId","removeSubtask","taskId","itemId","combineReducers","arguments","length","undefined","initialState","action","type","types","sidebar","_ref","defineProperty","payload","modalName","getUser","fetch","then","response","ok","json","Error","Loading","react_default","createElement","className","src","loading","alt","Login","logo","href","style","color","PageNotFound","props","Header","toggleMenu","_this","dispatch","isOpen","console","log","onClick","this","react_router_dom","to","img","name","split","Component","connect","AddListContainer","toggleModal","List","location","onEdit","onDelete","openModal","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","closeModal","_ref2","_callee2","_context2","_x2","addNewList","listName","method","headers","Accept","Content-Type","body","JSON","stringify","reorderLists","list","emit","deleteList","updateList","updateVisibility","reorder","startIndex","endIndex","_list$splice","splice","removed","slicedToArray","DraggableListContainer","updateListsOrder","result","destination","source","index","reorderList","_reorderList","debounce","ListApi","editList","_this2","on","getList","off","windowRef","window","pop","setState","_this3","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","assign","droppableProps","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","placeholder","mapDispatchToProps","listArray","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","abrupt","AuthApi","catch","error","_x5","Sidebar","toggleAddModal","nextProps","BurgerMenu","noOverlay","width","disableAutoFocus","customCrossIcon","customBurgerIcon","Sidebar_DraggableListContainer","customStyles","overlay","zIndex","content","top","bottom","left","right","borderRadius","phoneStyle","AddListModal","onSubmit","e","preventDefault","refs","addListInput","value","match","toast","success","react_modal_lib_default","onRequestClose","shouldCloseOnOverlayClick","screen","autoFocus","PureComponent","DeleteItemModal","info","EditListModal","editListInput","defaultValue","Modals","keys","addModal","AddList","deleteListModal","DeleteItem","editListModal","EditList","newName","Fragment","_ref3","_callee3","_context3","_x3","TitleBar","onUpdate","getTasksByListId","listId","addTask","toggleTask","reorderTasks","getTask","updateTaskTitle","deleteTask","TaskAdd","inputRef","onClear","Task","checked","onChange","toggleTasks","TaskApi","TaskDraggableContainer","updateTasksOrder","visibleTasks","_reorderTask","newTask","warn","clearCompletedTasks","confirm","getTasks","isEqual","input","components_Task_Task","_ref6","_callee6","_context6","ListId","_x6","taskArray","TaskContainer","params","Task_TaskDraggableContainer","react_router","updateSubtask","deleteSubtask","Subtask","subtaskNewName","SubtaskApi","TaskEdit","newTitleName","taskTitle","addNewSubtask","newSubtask","history","beginApiCall","endApiCall","Task_Subtask","_ref7","_callee7","_context7","_x7","Main","exact","path","render","component","Task_TaskEdit","ReactModal","setAppElement","App","common_Header","components_Sidebar","components_Main","react_toastify","autoClose","hideProgressBar","Entry","getUserAndLists","addSocketToApp","Socket","initializeSocket","components_App","store","createStore","rootReducer","applyMiddleware","thunk","react_redux_es","components_Entry","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d36fc5ea.chunk.js","sourcesContent":["export default {\n  auth: {\n    isLoading: true,\n  },\n  socket: null,\n  modals: {},\n  errors: [],\n  lists: {\n    keyOrder: [],\n    keyHash: {},\n  },\n  tasks: {\n    activeTasks: [],\n    completedTasks: [],\n    keyHash: {},\n  },\n  visibility: 'active',\n  apiStatus: { isLoading: true },\n};\n","//Apis\nexport const BEGIN_API_CALL = 'BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const END_API_CALL = 'END_API_CALL';\n\n//Auth\nexport const BEGIN_LOADING_USER = 'BEGIN_LOADING_USER';\nexport const LOADING_USER_COMPLETE = 'LOADING_USER_COMPLETE';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const ADD_SOCKET = 'ADD_SOCKET';\n\n//Modals\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\n//Lists\nexport const REORDER_LIST = 'REORDER_LIST';\nexport const GET_LIST_SUCCESS = 'GET_LIST_SUCCESS';\nexport const ADD_LIST_SUCCESS = 'ADD_LIST_SUCCESS';\nexport const UPDATE_LIST_SUCCESS = 'UPDATE_LIST_SUCCESS';\nexport const DELETE_LIST_SUCCESS = 'DELETE_LIST_SUCCESS';\n\n//Tasks\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS';\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\nexport const TOGGLE_TASK_SUCCESS = 'TOGGLE_TASK_SUCCESS';\nexport const CLEAR_TASKS_SUCCESS = 'CLEAR_TASKS_SUCCESS';\nexport const UPDATE_ACTIVE_TASK_ORDER = 'UPDATE_ACTIVE_TASK_ORDER';\nexport const UPDATE_COMPLETED_TASK_ORDER = 'UPDATE_COMPLETED_TASK_ORDER';\nexport const UPDATE_TASK_SUCCESS = 'UPDATE_TASK_SUCCESS';\n\n//Subtasks\nexport const ADD_SUBTASK_SUCCESS = 'ADD_SUBTASK_SUCCESS';\nexport const UPDATE_SUBTASK_SUCCESS = 'UPDATE_SUBTASK_SUCCESS';\nexport const DELETE_SUBTASK_SUCCESS = 'DELETE_SUBTASK_SUCCESS';\n\n//Visibility\nexport const UPDATE_VISIBILITY = 'UPDATE_VISIBILITY';\n","export const formatDataStructure = data => {\n  const keyOrder = data.sort((a, b) => a.order - b.order).map(item => item.id);\n  const keyHash = {};\n  data.forEach(item => (keyHash[item.id] = item));\n\n  return { keyOrder, keyHash };\n};\n\nexport const addNewData = (state, newData) => {\n  const newState = { ...state };\n  newState.keyOrder.push(newData.id);\n  newState.keyHash[newData.id] = newData;\n  return newState;\n};\n\nexport const formatTaskStructure = data => {\n  const activeTasks = data\n    .filter(task => !task.isCompleted)\n    .sort((a, b) => a.order - b.order)\n    .map(item => item.id);\n\n  const completedTasks = data\n    .filter(task => task.isCompleted)\n    .sort((a, b) => a.order - b.order)\n    .map(item => item.id);\n\n  const keyHash = {};\n  data.forEach(item => {\n    if (Array.isArray(item.subtasks)) {\n      item.subtasks = formatDataStructure(item.subtasks);\n    }\n    keyHash[item.id] = item;\n  });\n\n  return { activeTasks, completedTasks, keyHash };\n};\n\nexport const addNewTask = (state, newData) => {\n  const newState = { ...state };\n  newState.activeTasks = [...newState.activeTasks, newData.id];\n  const subtasksExists = newData.subtasks ? newData.subtasks : [];\n  newData.subtasks = formatDataStructure(subtasksExists);\n  newState.keyHash[newData.id] = newData;\n\n  return newState;\n};\n\nexport const updateToggle = (state, newData) => {\n  const keyHash = {};\n  const keyOrder = newData.subtasks.map(subtask => subtask.id);\n  newData.subtasks.forEach(subtask => {\n    keyHash[subtask.id] = subtask;\n  });\n  newData.subtasks = { keyOrder, keyHash };\n  const newDataStates = Object.values(state.keyHash).map(task =>\n    task.id === newData.id ? newData : task\n  );\n  return formatTaskStructure(newDataStates);\n};\n\nexport const addSubtask = (state, newData) => {\n  const newState = { ...state };\n  newState.keyHash[newData.TaskId].subtasks.keyOrder.push(newData.id);\n  newState.keyHash[newData.TaskId].subtasks.keyHash[newData.id] = newData;\n  return newState;\n};\n\nexport const removeSubtask = (state, data) => {\n  const newState = { ...state };\n  newState.keyHash[data.taskId].subtasks.keyOrder = newState.keyHash[\n    data.taskId\n  ].subtasks.keyOrder.filter(itemId => itemId !== data.id);\n\n  return newState;\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport lists from './list';\nimport modals from './modal';\nimport socket from './socket';\nimport tasks from './task';\nimport visibility from './visibility';\nimport apiStatus from './apiStatus';\nimport { reducer as sidebar } from 'redux-burger-menu';\n\nexport default combineReducers({\n  auth,\n  sidebar,\n  modals,\n  lists,\n  socket,\n  tasks,\n  visibility,\n  apiStatus,\n});\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function authReducer(state = initialState.auth, action) {\n  switch (action.type) {\n    case types.LOADING_USER_COMPLETE:\n      return { isLoading: false };\n    case types.GET_USER_SUCCESS:\n      return { ...action.data, isLoading: false };\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function listReducer(state = initialState.lists, action) {\n  switch (action.type) {\n    case types.OPEN_MODAL:\n      return { [action.payload.modalName]: true, data: action.payload.data };\n    default:\n      return {};\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\nimport { formatDataStructure, addNewData } from '../../utils/dataFormat';\n\nexport default function listReducer(state = initialState.lists, action) {\n  switch (action.type) {\n    case types.UPDATE_LIST_SUCCESS:\n    case types.DELETE_LIST_SUCCESS:\n    case types.GET_LIST_SUCCESS:\n      return formatDataStructure(action.data);\n    case types.ADD_LIST_SUCCESS:\n      return addNewData(state, action.data);\n    case types.REORDER_LIST:\n      return { ...state, keyOrder: action.data };\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function socketReducer(state = initialState.socket, action) {\n  switch (action.type) {\n    case types.ADD_SOCKET:\n      return action.data;\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\nimport {\n  addNewTask,\n  formatTaskStructure,\n  updateToggle,\n  addSubtask,\n  removeSubtask,\n} from '../../utils/dataFormat';\n\nexport default function taskReducer(state = initialState.tasks, action) {\n  switch (action.type) {\n    case types.CLEAR_TASKS_SUCCESS:\n    case types.GET_TASK_SUCCESS:\n      return formatTaskStructure(action.data);\n    case types.ADD_TASK_SUCCESS:\n      return addNewTask(state, action.data);\n    case types.TOGGLE_TASK_SUCCESS:\n      return updateToggle(state, action.data);\n    case types.ADD_SUBTASK_SUCCESS:\n      return addSubtask(state, action.data);\n    case types.DELETE_SUBTASK_SUCCESS:\n      return removeSubtask(state, action.data);\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function socketReducer(state = initialState.visibility, action) {\n  switch (action.type) {\n    case types.UPDATE_VISIBILITY:\n      return action.visibility;\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function apiReducer(state = initialState.apiStatus, action) {\n  switch (action.type) {\n    case types.BEGIN_API_CALL:\n      return { isLoading: true };\n    case types.END_API_CALL:\n      return { isLoading: false };\n    default:\n      return state;\n  }\n}\n","export const getUser = () => {\n  return fetch('/auth/currentUserAndList').then(response => {\n    if (response && response.ok) {\n      return response.json();\n    } else {\n      throw new Error('Could not retrieve user.');\n    }\n  });\n};\n","import React from 'react';\nimport loading from '../../media/loading.gif';\n\nexport default () => (\n  <div className=\"loading--div-container\">\n    <img className=\"loading--img-loading\" src={loading} alt=\"Loading...\" />\n  </div>\n);\n","import React from 'react';\nimport logo from '../../media/bean.png';\n\nexport default () => (\n  <div className=\"login--div-full\">\n    <div className=\"login--div-container\">\n      <img className=\"login--img-logo\" src={logo} alt=\"Beans\" />\n      <span className=\"login--span-title\">Azuki</span>\n      <span className=\"login--span-intro\">Login With</span>\n      <a className=\"login--a-provider\" href=\"/auth/google\">\n        <i className=\"fab fa-google\" /> <span style={{ color: '#4285F4' }}>G</span>\n        <span style={{ color: '#DB4437' }}>o</span>\n        <span style={{ color: '#F4B400' }}>o</span>\n        <span style={{ color: '#4285F4' }}>g</span>\n        <span style={{ color: '#0F9D58' }}>l</span>\n        <span style={{ color: '#DB4437' }}>e</span>\n      </a>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default props => <div className=\"\">NOTFOUND</div>;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  toggleMenu = () => {\n    this.props.dispatch(toggleMenu(!this.props.sidebar.isOpen));\n  };\n\n  shouldComponentUpdate() {\n    return false; // prevent unnecessary re-render due to sidebar props\n  }\n\n  render() {\n    console.log('Header Rendered');\n    return (\n      <div className=\"header--div-container\">\n        <div className=\"header--div-left\">\n          <i className=\"header--i-burger fa fa-bars\" onClick={this.toggleMenu} />\n        </div>\n        <div className=\"header--div-mid\">\n          <Link to={'/'}>\n            <h1 className=\"header--h1-title\">A Z U K I</h1>\n          </Link>\n        </div>\n        <div className=\"header--div-right\">\n          <img className=\"header--img-profile\" src={this.props.auth.img} alt=\"profile\" />\n          <div className=\"header--profile-name\"> {this.props.auth.name.split(' ')[0]} </div>\n          <a href=\"/auth/logout\">Logout</a>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ dispatch, auth, sidebar }) => ({ dispatch, auth, sidebar });\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nexport default props => (\n  <div className=\"sidebar--div-addListContainer\">\n    <button onClick={() => props.toggleModal()}>Add New List</button>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default props => (\n  <div\n    className={\n      props.location === props.item.id ? 'list--div-container-selected' : 'list--div-container'\n    }\n  >\n    <Link to={`/list/${props.item.id}`}>\n      <span className=\"list--span-name\">{props.item.name}</span>\n    </Link>\n    <div className=\"list--div-buttonContainer\">\n      <button className=\"fas fa-edit\" onClick={() => props.onEdit()} />\n      <button className=\"fas fa-trash\" onClick={() => props.onDelete()} />\n    </div>\n  </div>\n);\n","import * as types from './actionTypes';\n\nexport const openModal = (modalName, data) => async dispatch => {\n  dispatch({ type: types.OPEN_MODAL, payload: { modalName, data } });\n};\n\nexport const closeModal = () => async dispatch => {\n  dispatch({ type: types.CLOSE_MODAL });\n};\n","export const addNewList = listName => {\n  return fetch('/api/list/createList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name: listName }),\n  }).then(response => {\n    if (response.ok) {\n      let data = response.json();\n      console.log(data);\n      return data;\n    }\n  });\n};\n\nexport const reorderLists = (list, socket) => {\n  return fetch('/api/list/reorderList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(list),\n  }).then(response => {\n    if (response.ok) {\n      if (socket) {\n        socket.emit('updating', 'list');\n      }\n    }\n  });\n};\n\nexport const deleteList = id => {\n  return fetch(`/api/list/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const updateList = (id, name) => {\n  return fetch(`/api/list/updateListFields`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const clearCompletedTasks = ListId => {\n  return fetch(`/api/list/clearCompletedTasks`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ ListId }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n","import * as types from './actionTypes';\n\nexport const updateVisibility = visibility => async dispatch => {\n  dispatch({ type: types.UPDATE_VISIBILITY, visibility });\n};\n","export const reorder = (list, startIndex, endIndex) => {\n  const [removed] = list.splice(startIndex, 1);\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport List from './List';\nimport { openModal } from '../../redux/actions/modalActions';\nimport { reorderList, getList } from '../../redux/actions/listActions';\nimport { updateVisibility } from '../../redux/actions/visibilityActions';\nimport * as ListApi from '../../api/listApi';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\n\nclass DraggableListContainer extends Component {\n  state = { location: null };\n  componentDidMount() {\n    if (this.props.socket) {\n      this.props.socket.on('list', () => this.props.getList());\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.socket) {\n      this.props.socket.off('list');\n    }\n  }\n\n  componentDidUpdate() {\n    const windowRef = window.location.href.split('/').pop();\n    if (this.state.location !== windowRef) {\n      this.setState({ location: windowRef });\n    }\n  }\n\n  updateListsOrder = result => {\n    if (!result.destination) return;\n    const lists = reorder(this.props.lists.keyOrder, result.source.index, result.destination.index);\n    this.props.reorderList(lists);\n    this._reorderList(lists);\n  };\n\n  _reorderList = debounce(lists => {\n    ListApi.reorderLists(lists, this.props.socket);\n  }, 2000);\n\n  deleteList = item => {\n    this.props.openModal('deleteListModal', item);\n  };\n\n  editList = item => {\n    this.props.openModal('editListModal', item);\n  };\n\n  render() {\n    console.log('DraggableList rendered');\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.updateListsOrder}>\n          <Droppable droppableId=\"droppableList\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-listContainer\"\n              >\n                {this.props.lists.keyOrder.map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <List\n                          location={this.state.location}\n                          item={this.props.lists.keyHash[key]}\n                          onDelete={() => this.deleteList(this.props.lists.keyHash[key])}\n                          onEdit={() => this.editList(this.props.lists.keyHash[key])}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ lists, socket, sidebar }) => ({\n  lists,\n  socket,\n  sidebar,\n});\n\nconst mapDispatchToProps = {\n  openModal,\n  reorderList,\n  getList,\n  updateVisibility,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DraggableListContainer);\n","import * as types from './actionTypes';\nimport * as ListApi from '../../api/listApi';\nimport * as AuthApi from '../../api/authApi';\n\nexport const addNewList = (listName, socket) => async dispatch => {\n  return ListApi.addNewList(listName)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.ADD_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const deleteList = (id, socket) => async dispatch => {\n  return ListApi.deleteList(id)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.DELETE_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const updateList = (id, name, socket) => async dispatch => {\n  return ListApi.updateList(id, name)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.UPDATE_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const reorderList = listArray => async dispatch => {\n  dispatch({ type: types.REORDER_LIST, data: listArray });\n};\n\nexport const getList = () => async dispatch => {\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.list });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const clearCompletedTasks = (listId, socket) => async dispatch => {\n  return ListApi.clearCompletedTasks(listId).then(data => {\n    if (data) {\n      dispatch({ type: types.CLEAR_TASKS_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { connect } from 'react-redux';\nimport AddListContainer from './AddListContainer';\nimport DraggableListContainer from './DraggableListContainer';\nimport { openModal } from '../../redux/actions/modalActions';\n\nclass Sidebar extends Component {\n  toggleAddModal = () => {\n    this.props.openModal('addModal');\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.sidebar.isOpen !== this.props.sidebar.isOpen;\n  }\n\n  render() {\n    console.log('Sidebar Rendered');\n    return (\n      <div>\n        <Menu\n          noOverlay={true}\n          isOpen={this.props.sidebar.isOpen}\n          width={'300px'}\n          disableAutoFocus\n          customCrossIcon={false}\n          customBurgerIcon={false}\n        >\n          <AddListContainer toggleModal={this.toggleAddModal} />\n          <DraggableListContainer />\n        </Menu>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ sidebar }) => ({ sidebar });\nconst mapDispatchToProps = { openModal };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { addNewList } from '../../redux/actions/listActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: { top: '43%', bottom: '40%', left: '30%', right: '30%', borderRadius: '20px' },\n};\n\nconst phoneStyle = { top: '10%', bottom: 'auto', left: '10%', right: '10%', borderRadius: '20px' };\n\nclass AddListModal extends PureComponent {\n  onSubmit = async e => {\n    e.preventDefault();\n    const name = this.refs.addListInput.value;\n    if (\n      name === undefined ||\n      name === null ||\n      name.length === 0 ||\n      name.length > 16 ||\n      !name.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.error('Must be 1-16 character long.');\n    }\n    await this.props.addNewList(name, this.props.socket);\n    toast.success(`${name} has been added.`);\n    this.props.closeModal();\n  };\n\n  render() {\n    console.log('AddModal rendered');\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 500 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <form className=\"AddListModal--div-container\" onSubmit={e => this.onSubmit(e)}>\n          <h1>Enter the title of the new list:</h1>\n          <input type=\"text\" ref=\"addListInput\" autoFocus />\n          <div className=\"AddListModal--div-buttonContainer\">\n            <button type=\"button\" onClick={() => this.props.closeModal()}>\n              Cancel\n            </button>\n            <button type=\"submit\">Save</button>\n          </div>\n        </form>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = { closeModal, addNewList };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddListModal);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: { top: '43%', bottom: '40%', left: '30%', right: '30%', borderRadius: '20px' },\n};\n\nconst phoneStyle = { top: '43%', bottom: 'auto', left: '10%', right: '10%', borderRadius: '20px' };\n\nclass DeleteItemModal extends PureComponent {\n  onDelete = name => {\n    toast.info(`${name} has been deleted`);\n    this.props.onDelete();\n    this.props.closeModal();\n  };\n  render() {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 500 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <div className=\"deleteItem--div-container\">\n          <h1>Are you sure you want to delete</h1>\n          <strong>{this.props.data}?</strong>\n          <div className=\"deleteItem--div-button-container\">\n            <button onClick={() => this.onDelete(this.props.data)}>Delete</button>\n            <button onClick={this.props.closeModal}>Cancel</button>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapDispatchToProps = { closeModal };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DeleteItemModal);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: { top: '43%', bottom: '40%', left: '30%', right: '30%', borderRadius: '20px' },\n};\n\nconst phoneStyle = { top: '10%', bottom: 'auto', left: '10%', right: '10%', borderRadius: '20px' };\n\nclass EditListModal extends PureComponent {\n  onSubmit = async e => {\n    e.preventDefault();\n    const name = this.refs.editListInput.value;\n    if (this.props.data === name) {\n      return this.props.closeModal();\n    }\n    if (name === undefined || name === null || name.length === 0 || name.length > 16) {\n      return toast.error('Must be 1-16 character long.');\n    }\n    await this.props.onEdit(name);\n    toast.success(`${this.props.data} has been renamed to ${name}.`);\n    this.props.closeModal();\n  };\n\n  render() {\n    console.log('EditListModal rendered');\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 500 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <form className=\"AddListModal--div-container\" onSubmit={e => this.onSubmit(e)}>\n          <h1>\n            Rename <strong>{this.props.data}</strong> to?\n          </h1>\n          <input type=\"text\" ref=\"editListInput\" autoFocus defaultValue={this.props.data} />\n          <div className=\"AddListModal--div-buttonContainer\">\n            <button type=\"submit\">Save</button>\n            <button type=\"button\" onClick={() => this.props.closeModal()}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapDispatchToProps = { closeModal };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(EditListModal);\n","import React, { Component } from 'react';\nimport AddListModal from './AddList';\nimport DeleteItemModal from './DeleteItem';\nimport EditListModal from './EditList';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { deleteList, updateList } from '../../redux/actions/listActions';\n\nclass Modals extends Component {\n  shouldComponentUpdate(nextProps) {\n    return Object.keys(nextProps.modals).length !== Object.keys(this.props.modals).length;\n  }\n\n  closeModal = () => {\n    this.props.closeModal();\n  };\n\n  render() {\n    console.log('Modals Rendered');\n    if (this.props.modals.addModal) {\n      return <AddListModal isOpen={true} closeModal={this.closeModal} />;\n    } else if (this.props.modals.deleteListModal) {\n      return (\n        <DeleteItemModal\n          isOpen={true}\n          closeModal={this.closeModal}\n          data={this.props.modals.data.name}\n          onDelete={() => this.props.deleteList(this.props.modals.data.id, this.props.socket)}\n        />\n      );\n    } else if (this.props.modals.editListModal) {\n      return (\n        <EditListModal\n          isOpen={true}\n          closeModal={this.closeModal}\n          data={this.props.modals.data.name}\n          onEdit={newName =>\n            this.props.updateList(this.props.modals.data.id, newName, this.props.socket)\n          }\n        />\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nconst mapStateToProps = ({ modals, lists, socket }) => ({ modals, lists, socket });\nconst mapDispatchToProps = { closeModal, deleteList, updateList };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Modals);\n","import React from 'react';\n\nexport default props => (\n  <div className=\"titlebar--div-container\">\n    <div className=\"titlebar--div-buttongroup\">\n      <button\n        type=\"button\"\n        className={props.visibility === 'active' ? 'titlebar--button-selected' : 'titlebar--button'}\n        onClick={() => props.onUpdate('active')}\n      >\n        Active\n      </button>\n      <button\n        type=\"button\"\n        className={\n          props.visibility === 'completed' ? 'titlebar--button-selected' : 'titlebar--button'\n        }\n        onClick={() => props.onUpdate('completed')}\n      >\n        Completed\n      </button>\n    </div>\n  </div>\n);\n","export const getTasksByListId = listId => {\n  return fetch(`/api/tasks/${listId}`).then(async response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const addTask = (listId, name) => {\n  return fetch(`/api/tasks/create`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ listId, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const toggleTask = (taskId, isCompleted) => {\n  return fetch(`/api/tasks/toggle`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ taskId, isCompleted }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const reorderTasks = (tasks, socket) => {\n  return fetch('/api/tasks/reorderTasks', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ tasks }),\n  }).then(response => {\n    if (socket) {\n      socket.emit('updating', 'tasks');\n    }\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const getTask = taskId => {\n  return fetch(`/api/tasks/single/${taskId}`).then(async response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const updateTaskTitle = (id, name) => {\n  return fetch('/api/tasks/updateTaskTitle', {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const deleteTask = id => {\n  return fetch('/api/tasks/', {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    if (response.ok) {\n      return 'Deleted';\n    }\n  });\n};\n","import React from 'react';\n\nexport default props => {\n  if (props.visibility === 'active') {\n    return (\n      <div className=\"TaskAdd--div-container\">\n        <form onSubmit={e => props.onSubmit(e)}>\n          <input type=\"text\" ref={props.inputRef} placeholder=\"Add a new task here\" />\n        </form>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"TaskAdd--div-container-completed\">\n        <button onClick={() => props.onClear()}>Clear Completed</button>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleTask } from '../../redux/actions/taskActions';\n\nclass Task extends Component {\n  toggleTasks() {\n    this.props.toggleTask(this.props.item.id, !this.props.item.isCompleted, this.props.socket);\n  }\n\n  render() {\n    return (\n      <div className=\"Task--div-container\">\n        <input\n          type=\"checkbox\"\n          checked={this.props.item.isCompleted}\n          onChange={() => this.toggleTasks()}\n        />\n        <span>{this.props.item.name}</span>\n        <Link to={`/task/edit/${this.props.item.id}`} className=\"fas fa-edit Task--div-editLink\" />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = {\n  toggleTask,\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(Task);\n","import * as types from './actionTypes';\nimport * as TaskApi from '../../api/taskApi';\n\nexport const getTasks = listId => async dispatch => {\n  await TaskApi.getTasksByListId(listId).then(data => {\n    if (data) {\n      dispatch({ type: types.GET_TASK_SUCCESS, data });\n    }\n  });\n};\n\nexport const addTask = (listId, name, socket) => async dispatch => {\n  await TaskApi.addTask(listId, name).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_TASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const getTask = taskId => async dispatch => {\n  await TaskApi.getTask(taskId).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_TASK_SUCCESS, data });\n    }\n  });\n};\n\nexport const toggleTask = (taskId, isCompleted, socket) => async dispatch => {\n  await TaskApi.toggleTask(taskId, isCompleted).then(data => {\n    if (data) {\n      dispatch({ type: types.TOGGLE_TASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const reorderTasks = (taskArray, visibility) => async dispatch => {\n  if (visibility === 'active') {\n    dispatch({ type: types.UPDATE_ACTIVE_TASK_ORDER, data: taskArray });\n  } else {\n    dispatch({ type: types.UPDATE_COMPLETED_TASK_ORDER, data: taskArray });\n  }\n};\n\nexport const updateTaskTitle = (id, name, socket) => async dispatch => {\n  return TaskApi.updateTaskTitle(id, name).then(data => {\n    if (data) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const deleteTask = (id, socket) => async dispatch => {\n  return TaskApi.deleteTask(id).then(data => {\n    if (data) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTasks, addTask, reorderTasks } from '../../redux/actions/taskActions';\nimport { clearCompletedTasks } from '../../redux/actions/listActions';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport isEqual from 'react-fast-compare';\nimport TaskAdd from './TaskAdd';\nimport { toast } from 'react-toastify';\nimport Task from './Task';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\nimport * as TaskApi from '../../api/taskApi';\n\nclass TaskDraggableContainer extends Component {\n  state = { listId: '' };\n  componentDidMount() {\n    this.props.getTasks(this.props.listId);\n    if (this.props.socket) {\n      this.props.socket.on('tasks', () => this.props.getTasks(this.props.listId));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.socket) {\n      this.props.socket.off('tasks');\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return (\n      !isEqual(nextProps.tasks, this.props.tasks) ||\n      this.props.visibility !== nextProps.visibility ||\n      nextProps.listId !== this.props.listId\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.state.listId !== this.props.listId) {\n      this.props.getTasks(this.props.listId);\n      this.setState({ listId: this.props.listId });\n    }\n  }\n\n  updateTasksOrder = result => {\n    if (!result.destination) return;\n    const tasks = reorder(this.visibleTasks(), result.source.index, result.destination.index);\n    this.props.reorderTasks(tasks, this.props.visibility);\n    this._reorderTask(tasks);\n  };\n\n  _reorderTask = debounce(tasks => {\n    TaskApi.reorderTasks(tasks, this.props.socket);\n  }, 2000);\n\n  visibleTasks = () => {\n    return this.props.visibility === 'active'\n      ? this.props.tasks.activeTasks\n      : this.props.tasks.completedTasks;\n  };\n\n  addNewTask = e => {\n    e.preventDefault();\n    const newTask = this.newTask.value;\n    if (\n      newTask === '' ||\n      newTask === undefined ||\n      newTask === null ||\n      !newTask.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.warn('Nothing is entered. Please try again.');\n    }\n    if (newTask.length > 255) {\n      return toast.warn(\"Sorry, please don't type in a paragraph. Max 255 characters.\");\n    }\n    toast.success(`${newTask} has been added successfully.`);\n    this.props.addTask(this.props.listId, newTask, this.props.socket);\n    this.newTask.value = '';\n  };\n\n  clearCompletedTasks = () => {\n    const confirmation = window.confirm(\n      'This will permanent clear all completed task in this list, are you sure?'\n    );\n    if (confirmation) {\n      this.props.clearCompletedTasks(this.props.listId, this.props.socket);\n    }\n  };\n\n  render() {\n    console.log(this.props.tasks);\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.updateTasksOrder}>\n          <Droppable droppableId=\"droppableTasks\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-tasksContainer\"\n              >\n                <TaskAdd\n                  onClear={() => this.clearCompletedTasks()}\n                  onSubmit={this.addNewTask}\n                  inputRef={input => (this.newTask = input)}\n                  visibility={this.props.visibility}\n                />\n                {this.visibleTasks().map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Task item={this.props.tasks.keyHash[key]} />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ visibility, tasks, socket }) => ({\n  visibility,\n  tasks,\n  socket,\n});\n\nconst mapDispatchToProps = {\n  getTasks,\n  addTask,\n  clearCompletedTasks,\n  reorderTasks,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskDraggableContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { updateVisibility } from '../../redux/actions/visibilityActions';\nimport TitleBar from './TitleBar';\nimport TaskDraggableContainer from '../Task/TaskDraggableContainer';\n\nclass TaskContainer extends Component {\n  componentDidMount() {\n    this.props.toggleMenu(false);\n  }\n  shouldComponentUpdate(nextProps) {\n    return (\n      !nextProps.lists.keyHash[nextProps.match.params.id] ||\n      nextProps.match.params.id !== this.props.match.params.id ||\n      nextProps.visibility !== this.props.visibility\n    );\n  }\n\n  componentDidUpdate() {\n    this.props.toggleMenu(false);\n  }\n\n  render() {\n    if (!this.props.lists.keyHash[this.props.match.params.id]) {\n      return <Redirect to=\"/NotFound\" />;\n    }\n    return (\n      <div className=\"task--div-full-container\">\n        <TitleBar\n          name={this.props.lists.keyHash[this.props.match.params.id].name}\n          visibility={this.props.visibility}\n          onUpdate={visibility => this.props.updateVisibility(visibility)}\n        />\n        <TaskDraggableContainer listId={this.props.match.params.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ visibility, lists }) => ({\n  visibility,\n  lists,\n});\n\nconst mapDispatchToProps = {\n  updateVisibility,\n  toggleMenu,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskContainer);\n","export const addSubtask = (taskId, name) => {\n  return fetch(`/api/subtasks/create`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ taskId, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const updateSubtask = (id, name) => {\n  return fetch(`/api/subtasks/update`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const deleteSubtask = id => {\n  return fetch(`/api/subtasks/`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { updateSubtask, deleteSubtask } from '../../redux/actions/subtaskActions';\n\nclass Subtask extends Component {\n  updateSubtask = e => {\n    e.preventDefault();\n    const subtaskNewName = this.refs[this.props.item.id].value;\n    if (\n      subtaskNewName.length === 0 ||\n      subtaskNewName === null ||\n      subtaskNewName === undefined ||\n      !subtaskNewName.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.warn('Task title cannot be empty.');\n    } else if (subtaskNewName.length > 255) {\n      return toast.warn('Must be between 1-255 characters long.');\n    }\n    this.props.updateSubtask(this.props.item.id, subtaskNewName, this.props.socket);\n    toast.success(`${this.props.item.name} has been renamed to \"${subtaskNewName}\".`);\n  };\n\n  deleteSubtask = () => {\n    const confirm = window.confirm(`Delete \"${this.props.item.name}\"?`);\n    if (confirm) {\n      this.props.deleteSubtask(this.props.item.id, this.props.item.TaskId, this.props.socket);\n      toast.success(`${this.props.item.name} has been deleted.`);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Subtask--div-container\">\n        <form onSubmit={e => this.updateSubtask(e)}>\n          <input type=\"text\" defaultValue={this.props.item.name} ref={this.props.item.id} />\n        </form>\n        <button onClick={() => this.deleteSubtask()} className=\"fas fa-trash\" />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = { updateSubtask, deleteSubtask };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Subtask);\n","import * as types from './actionTypes';\nimport * as SubtaskApi from '../../api/subtaskApi';\n\nexport const addNewSubtask = (taskId, name, socket) => async dispatch => {\n  return SubtaskApi.addSubtask(taskId, name).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_SUBTASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const updateSubtask = (id, name, socket) => async dispatch => {\n  return SubtaskApi.updateSubtask(id, name).then(data => {\n    if (data) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const deleteSubtask = (id, taskId, socket) => async dispatch => {\n  return SubtaskApi.deleteSubtask(id).then(data => {\n    if (data) {\n      dispatch({ type: types.DELETE_SUBTASK_SUCCESS, data: { id, taskId } });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { beginApiCall, endApiCall } from '../../redux/actions/apiStatusActions';\nimport { getTask, updateTaskTitle, deleteTask } from '../../redux/actions/taskActions';\nimport { addNewSubtask } from '../../redux/actions/subtaskActions';\nimport Subtask from './Subtask';\nimport { toast } from 'react-toastify';\n\nclass TaskEdit extends Component {\n  async componentDidMount() {\n    this.props.beginApiCall();\n    if (!this.props.tasks.keyHash[this.props.match.params.id]) {\n      await this.props.getTask(this.props.match.params.id);\n    }\n    this.props.endApiCall();\n  }\n\n  updateTaskTitle = e => {\n    e.preventDefault();\n    const newTitleName = this.refs.taskTitle.value;\n    if (\n      newTitleName.length === 0 ||\n      newTitleName === null ||\n      newTitleName === undefined ||\n      !newTitleName.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.warn('Task title cannot be empty.');\n    } else if (newTitleName.length > 255) {\n      return toast.warn('Must be between 1-255 characters long.');\n    }\n    this.props.updateTaskTitle(this.props.match.params.id, newTitleName);\n    toast.success(`Updated task title to ${newTitleName}`);\n  };\n\n  addNewSubtask = e => {\n    e.preventDefault();\n    const newSubtask = this.refs.addNewSubtask.value;\n    if (\n      newSubtask.length === 0 ||\n      newSubtask === null ||\n      newSubtask === undefined ||\n      !newSubtask.match(/[a-zA-Z0-9]/g)\n    ) {\n      return;\n    } else if (newSubtask.length > 255) {\n      toast.warn('Must be between 1-255 characters long.');\n    }\n    this.props.addNewSubtask(this.props.match.params.id, newSubtask);\n    toast.success(`${newSubtask} has been added successfully.`);\n    this.refs.addNewSubtask.value = '';\n  };\n\n  deleteTask = async () => {\n    const confirmation = window.confirm(\n      'Deleting this task will also delete all its subtasks, are you sure?'\n    );\n    if (confirmation) {\n      await this.props.deleteTask(this.props.match.params.id);\n      this.props.history.push(\n        `/list/${this.props.tasks.keyHash[this.props.match.params.id].ListId}`\n      );\n    }\n  };\n\n  render() {\n    if (this.props.apiStatus.isLoading) {\n      return <div>Loading</div>;\n    }\n    const task = this.props.tasks.keyHash[this.props.match.params.id];\n    if (!task) {\n      return <Redirect to=\"/NotFound\" />;\n    }\n\n    return (\n      <div className=\"Edit--div-container\">\n        <div className=\"Edit--div-top-level-edit\">\n          <Link to={`/list/${task.ListId}`}>\n            <i className=\"fas fa-arrow-left\" /> Back\n          </Link>\n          <button onClick={() => this.deleteTask()}>\n            Delete <i className=\"fas fa-trash\" />\n          </button>\n        </div>\n        <form onSubmit={e => this.updateTaskTitle(e)}>\n          <input\n            className=\"Edit--input-task\"\n            type=\"text\"\n            defaultValue={task.name}\n            ref=\"taskTitle\"\n          />\n        </form>\n        <form onSubmit={e => this.addNewSubtask(e)}>\n          <input\n            className=\"Edit--input-subtask\"\n            type=\"text\"\n            placeholder=\"Add a subtask here\"\n            ref=\"addNewSubtask\"\n          />\n        </form>\n        {task.subtasks.keyOrder.map(id => (\n          <Subtask key={id} item={task.subtasks.keyHash[id]} />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tasks, apiStatus }) => ({ tasks, apiStatus });\nconst mapDispatchToProps = {\n  beginApiCall,\n  getTask,\n  endApiCall,\n  addNewSubtask,\n  updateTaskTitle,\n  deleteTask,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskEdit);\n","import * as types from './actionTypes';\n\nexport const beginApiCall = () => {\n  return { type: types.BEGIN_API_CALL };\n};\n\nexport const endApiCall = () => {\n  return { type: types.END_API_CALL };\n};\n\nexport const apiCallError = () => {\n  return { type: types.API_CALL_ERROR };\n};\n\n// Auth Api Calls\nexport const loadingUserCompleted = () => {\n  return { type: types.LOADING_USER_COMPLETE };\n};\n","import React, { PureComponent } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PageNotFound from '../common/PageNotFound';\nimport TaskContainer from './TaskContainer';\nimport TaskEdit from '../Task/TaskEdit';\n\nclass Main extends PureComponent {\n  render() {\n    console.log('Main router Rendered');\n    return (\n      <Switch>\n        <Route exact path=\"/\" render={() => <div>MAIN</div>} />\n        <Route path=\"/list/:id\" component={TaskContainer} />\n        <Route\n          path=\"/task/edit/:id\"\n          render={props => <TaskEdit key={props.match.params.id} {...props} />}\n        />\n        <Route component={PageNotFound} />\n      </Switch>\n    );\n  }\n}\n\nexport default Main;\n","import 'react-toastify/dist/ReactToastify.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Header from './common/Header';\nimport Sidebar from './Sidebar';\nimport ReactModal from 'react-modal';\nimport Modals from './modals';\nimport Main from './Main';\n\nReactModal.setAppElement('#root');\nclass App extends Component {\n  render() {\n    console.log('App Rendered');\n    return (\n      <>\n        <Modals />\n        <Header />\n        <div id=\"outer-container\">\n          <Sidebar />\n          <Main />\n        </div>\n        <ToastContainer autoClose={2000} hideProgressBar />\n      </>\n    );\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default initialState => {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { getUserAndLists } from '../redux/actions/authActions';\nimport { addSocketToApp } from '../redux/actions/socketActions';\nimport Loading from './common/Loading';\nimport Login from './common/Login';\nimport PageNotFound from './common/PageNotFound';\nimport App from './App';\nimport initializeSocket from '../utils/socket';\n\nclass Entry extends Component {\n  componentWillMount() {\n    this.props.getUserAndLists();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.auth.isLoading !== this.props.auth.isLoading;\n  }\n\n  render() {\n    if (this.props.auth.isLoading) {\n      console.log('Loading Screen');\n      return <Loading />;\n    } else if (!this.props.auth.isLoading && this.props.auth.id) {\n      console.log('Entry Rendered');\n      this.props.addSocketToApp(initializeSocket(this.props.auth.id));\n      return <App />;\n    } else if (!this.props.auth.isLoading && !this.props.auth.id) {\n      return (\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route component={PageNotFound} />\n        </Switch>\n      );\n    }\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = { getUserAndLists, addSocketToApp };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Entry);\n","import Socket from 'socket.io-client';\n\nexport default id => {\n  const socket = Socket();\n  socket.on('connect', () => socket.emit('join', `${id}`));\n  return socket;\n};\n","import * as types from './actionTypes';\nimport * as AuthApi from '../../api/authApi';\nimport { loadingUserCompleted } from './apiStatusActions';\n\nexport const getUserAndLists = () => async dispatch => {\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.lists });\n      }\n      delete data.lists;\n      dispatch({ type: types.GET_USER_SUCCESS, data });\n    })\n    .catch(() => {\n      dispatch(loadingUserCompleted());\n    });\n};\n","import * as types from './actionTypes';\n\nexport const addSocketToApp = socket => async dispatch => {\n  dispatch({ type: types.ADD_SOCKET, data: socket });\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from './redux/configureStore';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport Entry from './components/Entry';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Entry />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/loading.ec9b161c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bean.2ff32ac4.png\";"],"sourceRoot":""}