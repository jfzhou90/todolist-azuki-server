{"version":3,"sources":["redux/reducers/initialState.js","redux/actions/actionTypes.js","utils/dataFormat.js","redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/modal.js","redux/reducers/list.js","redux/reducers/socket.js","redux/reducers/task.js","redux/reducers/visibility.js","redux/reducers/apiStatus.js","api/authApi.js","components/common/Loading.js","components/common/Login.js","components/common/PageNotFound.js","components/common/Header.js","components/Sidebar/AddListContainer.js","components/Sidebar/List.js","redux/actions/modalActions.js","api/listApi.js","redux/actions/visibilityActions.js","utils/draggable.js","components/Sidebar/DraggableListContainer.js","redux/actions/listActions.js","components/Sidebar/index.js","components/modals/AddList.js","components/modals/DeleteItem.js","components/modals/EditList.js","components/modals/index.js","components/Main/TitleBar.js","api/taskApi.js","components/Task/TaskAdd.js","api/subtaskApi.js","components/Task/SubtaskDraggables.js","redux/actions/subtaskActions.js","components/Task/SubtaskDraggableContainer.js","components/Task/Task.js","redux/actions/taskActions.js","components/Task/TaskDraggableContainer.js","components/Main/TaskContainer.js","components/Task/Subtask.js","components/Task/TaskEdit.js","redux/actions/apiStatusActions.js","components/common/Welcome.js","components/Main/index.js","components/App.js","redux/configureStore.js","components/Entry.js","utils/socket.js","redux/actions/authActions.js","redux/actions/socketActions.js","index.js","media/bean.png","media/loading.gif"],"names":["reducers_initialState","auth","isLoading","socket","modals","errors","lists","keyOrder","keyHash","tasks","activeTasks","completedTasks","visibility","apiStatus","BEGIN_API_CALL","END_API_CALL","LOADING_USER_COMPLETE","GET_USER_SUCCESS","ADD_SOCKET","OPEN_MODAL","REORDER_LIST","GET_LIST_SUCCESS","ADD_LIST_SUCCESS","UPDATE_LIST_SUCCESS","DELETE_LIST_SUCCESS","GET_TASK_SUCCESS","ADD_TASK_SUCCESS","TOGGLE_TASK_SUCCESS","CLEAR_TASKS_SUCCESS","ADD_SUBTASK_SUCCESS","DELETE_SUBTASK_SUCCESS","REORDER_SUBTASKS_SUCCESS","TOGGLE_SUBTASKS_SUCCESS","UPDATE_VISIBILITY","formatDataStructure","data","sort","a","b","order","map","item","id","forEach","addNewData","state","newData","newState","Object","objectSpread","push","formatTaskStructure","filter","task","isCompleted","Array","isArray","subtasks","addNewTask","concat","toConsumableArray","subtasksExists","updateToggle","subtask","newDataStates","values","addSubtask","TaskId","removeSubtask","taskId","itemId","reorderSubtasks","subtaskOrder","toggleSubtask","combineReducers","arguments","length","undefined","initialState","action","type","types","sidebar","_ref","defineProperty","payload","modalName","getUser","fetch","then","response","ok","json","Error","Loading","react_default","createElement","className","src","loading","alt","Login","logo","href","style","color","PageNotFound","props","Header","toggleMenu","_this","dispatch","isOpen","onClick","this","react_router_dom","to","img","name","split","Component","connect","AddListContainer","toggleModal","List","location","onEdit","onDelete","openModal","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","closeModal","_ref2","_callee2","_context2","_x2","addNewList","listName","method","headers","Accept","Content-Type","body","JSON","stringify","reorderLists","list","emit","deleteList","updateList","updateVisibility","reorder","draggables","startIndex","endIndex","_draggables$splice","splice","removed","slicedToArray","DraggableListContainer","updateListsOrder","result","destination","source","index","reorderList","_reorderList","debounce","ListApi","editList","_this2","on","getList","off","windowRef","window","pop","setState","_this3","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","assign","droppableProps","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","placeholder","mapDispatchToProps","listArray","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","abrupt","AuthApi","catch","error","console","log","_x5","Sidebar","toggleAddModal","nextProps","BurgerMenu","noOverlay","width","disableAutoFocus","customCrossIcon","customBurgerIcon","Sidebar_DraggableListContainer","customStyles","overlay","zIndex","content","top","bottom","left","right","borderRadius","phoneStyle","border","minHeight","padding","position","transform","minWidth","maxWidth","AddListModal","onSubmit","e","preventDefault","refs","addListInput","value","match","toast","success","react_modal_lib_default","onRequestClose","shouldCloseOnOverlayClick","screen","autoFocus","PureComponent","DeleteItemModal","info","EditListModal","editListInput","defaultValue","Modals","keys","addModal","AddList","deleteListModal","DeleteItem","editListModal","EditList","newName","Fragment","_ref3","_callee3","_context3","_x3","TitleBar","onUpdate","getTasksByListId","listId","addTask","toggleTask","reorderTasks","getTask","updateTaskTitle","deleteTask","TaskAdd","inputRef","onChange","target","onClear","updateSubtask","deleteSubtask","reorderSubTasks","subtaskArray","toggleSubTask","SubtaskDraggables","classname","_toggleSubtask","checked","SubtaskApi","defaultChecked","SubtaskDraggableContainer","updateSubtasksOrder","_updateSubtasksOrder","Task_SubtaskDraggables","Task","toggleTasks","Task_SubtaskDraggableContainer","TaskApi","TaskDraggableContainer","inputValue","updateTasksOrder","visibleTasks","_reorderTask","newTask","warn","clearCompletedTasks","confirm","getTasks","nextState","isEqual","input","react_router","when","message","components_Task_Task","_ref6","_callee6","_context6","ListId","_x6","taskArray","TaskContainer","params","Task_TaskDraggableContainer","Subtask","subtaskNewName","TaskEdit","newTitleName","taskTitle","addNewSubtask","newSubtask","history","beginApiCall","endApiCall","Task_Subtask","_ref7","_callee7","_context7","_x7","Welcome","Main","exact","path","component","render","Task_TaskEdit","ReactModal","setAppElement","App","common_Header","components_Sidebar","components_Main","react_toastify","autoClose","hideProgressBar","Entry","getUserAndLists","addSocketToApp","Socket","initializeSocket","components_App","store","createStore","rootReducer","applyMiddleware","thunk","react_redux_es","components_Entry","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2b6c948a.chunk.js","sourcesContent":["export default {\n  auth: {\n    isLoading: true,\n  },\n  socket: null,\n  modals: {},\n  errors: [],\n  lists: {\n    keyOrder: [],\n    keyHash: {},\n  },\n  tasks: {\n    activeTasks: [],\n    completedTasks: [],\n    keyHash: {},\n  },\n  visibility: 'active',\n  apiStatus: { isLoading: true },\n};\n","//Apis\nexport const BEGIN_API_CALL = 'BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const END_API_CALL = 'END_API_CALL';\n\n//Auth\nexport const BEGIN_LOADING_USER = 'BEGIN_LOADING_USER';\nexport const LOADING_USER_COMPLETE = 'LOADING_USER_COMPLETE';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const ADD_SOCKET = 'ADD_SOCKET';\n\n//Modals\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\n//Lists\nexport const REORDER_LIST = 'REORDER_LIST';\nexport const GET_LIST_SUCCESS = 'GET_LIST_SUCCESS';\nexport const ADD_LIST_SUCCESS = 'ADD_LIST_SUCCESS';\nexport const UPDATE_LIST_SUCCESS = 'UPDATE_LIST_SUCCESS';\nexport const DELETE_LIST_SUCCESS = 'DELETE_LIST_SUCCESS';\n\n//Tasks\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS';\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\nexport const TOGGLE_TASK_SUCCESS = 'TOGGLE_TASK_SUCCESS';\nexport const CLEAR_TASKS_SUCCESS = 'CLEAR_TASKS_SUCCESS';\nexport const UPDATE_ACTIVE_TASK_ORDER = 'UPDATE_ACTIVE_TASK_ORDER';\nexport const UPDATE_COMPLETED_TASK_ORDER = 'UPDATE_COMPLETED_TASK_ORDER';\nexport const UPDATE_TASK_SUCCESS = 'UPDATE_TASK_SUCCESS';\n\n//Subtasks\nexport const ADD_SUBTASK_SUCCESS = 'ADD_SUBTASK_SUCCESS';\nexport const UPDATE_SUBTASK_SUCCESS = 'UPDATE_SUBTASK_SUCCESS';\nexport const DELETE_SUBTASK_SUCCESS = 'DELETE_SUBTASK_SUCCESS';\nexport const REORDER_SUBTASKS_SUCCESS = 'REORDER_SUBTASKS_SUCCESS';\nexport const TOGGLE_SUBTASKS_SUCCESS = 'TOGGLE_SUBTASKS_SUCCESS';\n\n//Visibility\nexport const UPDATE_VISIBILITY = 'UPDATE_VISIBILITY';\n","export const formatDataStructure = data => {\n  const keyOrder = data.sort((a, b) => a.order - b.order).map(item => item.id);\n  const keyHash = {};\n  data.forEach(item => (keyHash[item.id] = item));\n\n  return { keyOrder, keyHash };\n};\n\nexport const addNewData = (state, newData) => {\n  const newState = { ...state };\n  newState.keyOrder.push(newData.id);\n  newState.keyHash[newData.id] = newData;\n  return newState;\n};\n\nexport const formatTaskStructure = data => {\n  const activeTasks = data\n    .filter(task => !task.isCompleted)\n    .sort((a, b) => a.order - b.order)\n    .map(item => item.id);\n\n  const completedTasks = data\n    .filter(task => task.isCompleted)\n    .sort((a, b) => a.order - b.order)\n    .map(item => item.id);\n\n  const keyHash = {};\n  data.forEach(item => {\n    if (Array.isArray(item.subtasks)) {\n      item.subtasks = formatDataStructure(item.subtasks);\n    }\n    keyHash[item.id] = item;\n  });\n\n  return { activeTasks, completedTasks, keyHash };\n};\n\nexport const addNewTask = (state, newData) => {\n  const newState = { ...state };\n  newState.activeTasks = [...newState.activeTasks, newData.id];\n  const subtasksExists = newData.subtasks ? newData.subtasks : [];\n  newData.subtasks = formatDataStructure(subtasksExists);\n  newState.keyHash[newData.id] = newData;\n\n  return newState;\n};\n\nexport const updateToggle = (state, newData) => {\n  const keyHash = {};\n  const keyOrder = newData.subtasks.map(subtask => subtask.id);\n  newData.subtasks.forEach(subtask => {\n    keyHash[subtask.id] = subtask;\n  });\n  newData.subtasks = { keyOrder, keyHash };\n  const newDataStates = Object.values(state.keyHash).map(task =>\n    task.id === newData.id ? newData : task\n  );\n  return formatTaskStructure(newDataStates);\n};\n\nexport const addSubtask = (state, newData) => {\n  const newState = { ...state };\n  newState.keyHash[newData.TaskId].subtasks.keyOrder.push(newData.id);\n  newState.keyHash[newData.TaskId].subtasks.keyHash[newData.id] = newData;\n  return newState;\n};\n\nexport const removeSubtask = (state, data) => {\n  const newState = { ...state };\n  newState.keyHash[data.taskId].subtasks.keyOrder = newState.keyHash[\n    data.taskId\n  ].subtasks.keyOrder.filter(itemId => itemId !== data.id);\n\n  return newState;\n};\n\nexport const reorderSubtasks = (state, taskId, subtaskOrder) => {\n  const newState = { ...state };\n  newState.keyHash[taskId].subtasks.keyOrder = subtaskOrder;\n\n  return newState;\n};\n\nexport const toggleSubtask = (state, data) => {\n  const newState = { ...state };\n  newState.keyHash[data.taskId].subtasks.keyHash[data.id].isCompleted = data.isCompleted;\n  return newState;\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport lists from './list';\nimport modals from './modal';\nimport socket from './socket';\nimport tasks from './task';\nimport visibility from './visibility';\nimport apiStatus from './apiStatus';\nimport { reducer as sidebar } from 'redux-burger-menu';\n\nexport default combineReducers({\n  auth,\n  sidebar,\n  modals,\n  lists,\n  socket,\n  tasks,\n  visibility,\n  apiStatus,\n});\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function authReducer(state = initialState.auth, action) {\n  switch (action.type) {\n    case types.LOADING_USER_COMPLETE:\n      return { isLoading: false };\n    case types.GET_USER_SUCCESS:\n      return { ...action.data, isLoading: false };\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function listReducer(state = initialState.lists, action) {\n  switch (action.type) {\n    case types.OPEN_MODAL:\n      return { [action.payload.modalName]: true, data: action.payload.data };\n    default:\n      return {};\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\nimport { formatDataStructure, addNewData } from '../../utils/dataFormat';\n\nexport default function listReducer(state = initialState.lists, action) {\n  switch (action.type) {\n    case types.UPDATE_LIST_SUCCESS:\n    case types.DELETE_LIST_SUCCESS:\n    case types.GET_LIST_SUCCESS:\n      return formatDataStructure(action.data);\n    case types.ADD_LIST_SUCCESS:\n      return addNewData(state, action.data);\n    case types.REORDER_LIST:\n      return { ...state, keyOrder: action.data };\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function socketReducer(state = initialState.socket, action) {\n  switch (action.type) {\n    case types.ADD_SOCKET:\n      return action.data;\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\nimport {\n  addNewTask,\n  formatTaskStructure,\n  updateToggle,\n  addSubtask,\n  removeSubtask,\n  reorderSubtasks,\n  toggleSubtask,\n} from '../../utils/dataFormat';\n\nexport default function taskReducer(state = initialState.tasks, action) {\n  switch (action.type) {\n    case types.CLEAR_TASKS_SUCCESS:\n    case types.GET_TASK_SUCCESS:\n      return formatTaskStructure(action.data);\n    case types.ADD_TASK_SUCCESS:\n      return addNewTask(state, action.data);\n    case types.TOGGLE_TASK_SUCCESS:\n      return updateToggle(state, action.data);\n    case types.ADD_SUBTASK_SUCCESS:\n      return addSubtask(state, action.data);\n    case types.DELETE_SUBTASK_SUCCESS:\n      return removeSubtask(state, action.data);\n    case types.REORDER_SUBTASKS_SUCCESS:\n      return reorderSubtasks(state, action.taskId, action.subtaskOrder);\n    case types.TOGGLE_SUBTASKS_SUCCESS:\n      return toggleSubtask(state, action);\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function socketReducer(state = initialState.visibility, action) {\n  switch (action.type) {\n    case types.UPDATE_VISIBILITY:\n      return action.visibility;\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function apiReducer(state = initialState.apiStatus, action) {\n  switch (action.type) {\n    case types.BEGIN_API_CALL:\n      return { isLoading: true };\n    case types.END_API_CALL:\n      return { isLoading: false };\n    default:\n      return state;\n  }\n}\n","export const getUser = () => {\n  return fetch('/auth/currentUserAndList').then(response => {\n    if (response && response.ok) {\n      return response.json();\n    } else {\n      throw new Error('Could not retrieve user.');\n    }\n  });\n};\n","import React from 'react';\nimport loading from '../../media/loading.gif';\n\nexport default () => (\n  <div className=\"loading--div-container\">\n    <img className=\"loading--img-loading\" src={loading} alt=\"Loading...\" />\n  </div>\n);\n","import React from 'react';\nimport logo from '../../media/bean.png';\n\nexport default () => (\n  <div className=\"login--div-full\">\n    <div className=\"login--div-container\">\n      <img className=\"login--img-logo\" src={logo} alt=\"Beans\" />\n      <span className=\"login--span-title\">Azuki</span>\n      <span className=\"login--span-intro\">Login With</span>\n      <a className=\"login--a-provider\" href=\"/auth/google\">\n        <i className=\"fab fa-google\" /> <span style={{ color: '#4285F4' }}>G</span>\n        <span style={{ color: '#DB4437' }}>o</span>\n        <span style={{ color: '#F4B400' }}>o</span>\n        <span style={{ color: '#4285F4' }}>g</span>\n        <span style={{ color: '#0F9D58' }}>l</span>\n        <span style={{ color: '#DB4437' }}>e</span>\n      </a>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default props => <div className=\"\">NOTFOUND</div>;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  toggleMenu = () => {\n    this.props.dispatch(toggleMenu(!this.props.sidebar.isOpen));\n  };\n\n  shouldComponentUpdate() {\n    return false; // prevent unnecessary re-render due to sidebar props\n  }\n\n  render() {\n    return (\n      <div className=\"header--div-container\">\n        <div className=\"header--div-left\">\n          <i className=\"header--i-burger fa fa-bars\" onClick={this.toggleMenu} />\n        </div>\n        <div className=\"header--div-mid\">\n          <Link to={'/'}>\n            <h1 className=\"header--h1-title\">A Z U K I</h1>\n          </Link>\n        </div>\n        <div className=\"header--div-right\">\n          <img className=\"header--img-profile\" src={this.props.auth.img} alt=\"profile\" />\n          <div className=\"header--profile-name\"> {this.props.auth.name.split(' ')[0]} </div>\n          <a href=\"/auth/logout\">Logout</a>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ dispatch, auth, sidebar }) => ({ dispatch, auth, sidebar });\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nexport default props => (\n  <div className=\"sidebar--div-addListContainer\">\n    <button onClick={() => props.toggleModal()}>Add New List</button>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default props => (\n  <div\n    className={\n      props.location === props.item.id ? 'list--div-container-selected' : 'list--div-container'\n    }\n  >\n    <Link to={`/list/${props.item.id}`}>\n      <span className=\"list--span-name\">{props.item.name}</span>\n    </Link>\n    <div className=\"list--div-buttonContainer\">\n      <button className=\"fas fa-edit\" onClick={() => props.onEdit()} />\n      <button className=\"fas fa-trash\" onClick={() => props.onDelete()} />\n    </div>\n  </div>\n);\n","import * as types from './actionTypes';\n\nexport const openModal = (modalName, data) => async dispatch => {\n  dispatch({ type: types.OPEN_MODAL, payload: { modalName, data } });\n};\n\nexport const closeModal = () => async dispatch => {\n  dispatch({ type: types.CLOSE_MODAL });\n};\n","export const addNewList = listName => {\n  return fetch('/api/list/createList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name: listName }),\n  }).then(response => {\n    if (response.ok) {\n      let data = response.json();\n      return data;\n    }\n  });\n};\n\nexport const reorderLists = (list, socket) => {\n  return fetch('/api/list/reorderList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(list),\n  }).then(response => {\n    if (response.ok) {\n      if (socket) {\n        socket.emit('updating', 'list');\n      }\n    }\n  });\n};\n\nexport const deleteList = id => {\n  return fetch(`/api/list/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const updateList = (id, name) => {\n  return fetch(`/api/list/updateListFields`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const clearCompletedTasks = ListId => {\n  return fetch(`/api/list/clearCompletedTasks`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ ListId }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n","import * as types from './actionTypes';\n\nexport const updateVisibility = visibility => async dispatch => {\n  dispatch({ type: types.UPDATE_VISIBILITY, visibility });\n};\n","export const reorder = (draggables, startIndex, endIndex) => {\n  const [removed] = draggables.splice(startIndex, 1);\n  draggables.splice(endIndex, 0, removed);\n\n  return draggables;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport List from './List';\nimport { openModal } from '../../redux/actions/modalActions';\nimport { reorderList, getList } from '../../redux/actions/listActions';\nimport { updateVisibility } from '../../redux/actions/visibilityActions';\nimport * as ListApi from '../../api/listApi';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\n\nclass DraggableListContainer extends Component {\n  state = { location: null };\n  componentDidMount() {\n    if (this.props.socket) {\n      this.props.socket.on('list', () => this.props.getList());\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.socket) {\n      this.props.socket.off('list');\n    }\n  }\n\n  componentDidUpdate() {\n    const windowRef = window.location.href.split('/').pop();\n    if (this.state.location !== windowRef) {\n      this.setState({ location: windowRef });\n    }\n  }\n\n  updateListsOrder = result => {\n    if (!result.destination) return;\n    const lists = reorder(this.props.lists.keyOrder, result.source.index, result.destination.index);\n    this.props.reorderList(lists);\n    this._reorderList(lists);\n  };\n\n  _reorderList = debounce(lists => {\n    ListApi.reorderLists(lists, this.props.socket);\n  }, 2000);\n\n  deleteList = item => {\n    this.props.openModal('deleteListModal', item);\n  };\n\n  editList = item => {\n    this.props.openModal('editListModal', item);\n  };\n\n  render() {\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.updateListsOrder}>\n          <Droppable droppableId=\"droppableList\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-listContainer\"\n              >\n                {this.props.lists.keyOrder.map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <List\n                          location={this.state.location}\n                          item={this.props.lists.keyHash[key]}\n                          onDelete={() => this.deleteList(this.props.lists.keyHash[key])}\n                          onEdit={() => this.editList(this.props.lists.keyHash[key])}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ lists, socket, sidebar }) => ({\n  lists,\n  socket,\n  sidebar,\n});\n\nconst mapDispatchToProps = {\n  openModal,\n  reorderList,\n  getList,\n  updateVisibility,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DraggableListContainer);\n","import * as types from './actionTypes';\nimport * as ListApi from '../../api/listApi';\nimport * as AuthApi from '../../api/authApi';\n\nexport const addNewList = (listName, socket) => async dispatch => {\n  return ListApi.addNewList(listName)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.ADD_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const deleteList = (id, socket) => async dispatch => {\n  return ListApi.deleteList(id)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.DELETE_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const updateList = (id, name, socket) => async dispatch => {\n  return ListApi.updateList(id, name)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.UPDATE_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const reorderList = listArray => async dispatch => {\n  dispatch({ type: types.REORDER_LIST, data: listArray });\n};\n\nexport const getList = () => async dispatch => {\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.list });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const clearCompletedTasks = (listId, socket) => async dispatch => {\n  return ListApi.clearCompletedTasks(listId).then(data => {\n    if (data) {\n      dispatch({ type: types.CLEAR_TASKS_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { connect } from 'react-redux';\nimport AddListContainer from './AddListContainer';\nimport DraggableListContainer from './DraggableListContainer';\nimport { openModal } from '../../redux/actions/modalActions';\n\nclass Sidebar extends Component {\n  toggleAddModal = () => {\n    this.props.openModal('addModal');\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.sidebar.isOpen !== this.props.sidebar.isOpen;\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu\n          noOverlay={true}\n          isOpen={this.props.sidebar.isOpen}\n          width={'300px'}\n          disableAutoFocus\n          customCrossIcon={false}\n          customBurgerIcon={false}\n        >\n          <AddListContainer toggleModal={this.toggleAddModal} />\n          <DraggableListContainer />\n        </Menu>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ sidebar }) => ({ sidebar });\nconst mapDispatchToProps = { openModal };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { addNewList } from '../../redux/actions/listActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: {\n    top: '30%',\n    bottom: 'auto',\n    left: '30%',\n    right: '30%',\n    borderRadius: '20px',\n  },\n};\n\nconst phoneStyle = {\n  content: {\n    border: '0',\n    borderRadius: '4px',\n    bottom: 'auto',\n    minHeight: '10rem',\n    left: '50%',\n    padding: '2rem',\n    position: 'fixed',\n    right: 'auto',\n    top: '50%',\n    transform: 'translate(-50%,-50%)',\n    minWidth: '20rem',\n    width: '80%',\n    maxWidth: '60rem',\n  },\n};\n\nclass AddListModal extends PureComponent {\n  onSubmit = async e => {\n    e.preventDefault();\n    const name = this.refs.addListInput.value;\n    if (\n      name === undefined ||\n      name === null ||\n      name.length === 0 ||\n      name.length > 16 ||\n      !name.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.error('Must be 1-16 character long.');\n    }\n    await this.props.addNewList(name, this.props.socket);\n    toast.success(`${name} has been added.`);\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 700 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        {console.log(window.screen)}\n        <form className=\"AddListModal--div-container\" onSubmit={e => this.onSubmit(e)}>\n          <h1>Enter the title of the new list:</h1>\n          <input type=\"text\" ref=\"addListInput\" autoFocus />\n          <div className=\"AddListModal--div-buttonContainer\">\n            <button type=\"button\" onClick={() => this.props.closeModal()}>\n              Cancel\n            </button>\n            <button type=\"submit\">Save</button>\n          </div>\n        </form>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = { closeModal, addNewList };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddListModal);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: {\n    top: '43%',\n    bottom: 'auto',\n    left: '30%',\n    right: '30%',\n    borderRadius: '20px',\n  },\n};\n\nconst phoneStyle = {\n  content: {\n    border: '0',\n    borderRadius: '4px',\n    bottom: 'auto',\n    minHeight: '10rem',\n    left: '50%',\n    padding: '2rem',\n    right: 'auto',\n    top: '50%',\n    transform: 'translate(-50%,-50%)',\n    minWidth: '20rem',\n    width: '80%',\n    maxWidth: '60rem',\n  },\n};\n\nclass DeleteItemModal extends PureComponent {\n  onDelete = name => {\n    toast.info(`${name} has been deleted`);\n    this.props.onDelete();\n    this.props.closeModal();\n  };\n  render() {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 700 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <div className=\"deleteItem--div-container\">\n          <h1>Are you sure you want to delete</h1>\n          <strong>{this.props.data}?</strong>\n          <div className=\"deleteItem--div-button-container\">\n            <button onClick={() => this.onDelete(this.props.data)}>Delete</button>\n            <button onClick={this.props.closeModal}>Cancel</button>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapDispatchToProps = { closeModal };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DeleteItemModal);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: {\n    top: '30%',\n    bottom: 'auto',\n    left: '30%',\n    right: '30%',\n    borderRadius: '20px',\n  },\n};\n\nconst phoneStyle = {\n  content: {\n    border: '0',\n    borderRadius: '4px',\n    top: '50%',\n    bottom: 'auto',\n    minHeight: '10rem',\n    left: '50%',\n    padding: '2rem',\n    position: 'fixed',\n    right: 'auto',\n    transform: 'translate(-50%,-50%)',\n    minWidth: '20rem',\n    width: '80%',\n    maxWidth: '60rem',\n  },\n};\n\nclass EditListModal extends PureComponent {\n  onSubmit = async e => {\n    e.preventDefault();\n    const name = this.refs.editListInput.value;\n    if (this.props.data === name) {\n      return this.props.closeModal();\n    }\n    if (name === undefined || name === null || name.length === 0 || name.length > 16) {\n      return toast.error('Must be 1-16 character long.');\n    }\n    await this.props.onEdit(name);\n    toast.success(`${this.props.data} has been renamed to ${name}.`);\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 700 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <form className=\"AddListModal--div-container\" onSubmit={e => this.onSubmit(e)}>\n          <h1>\n            Rename <strong>{this.props.data}</strong> to?\n          </h1>\n          <input type=\"text\" ref=\"editListInput\" autoFocus defaultValue={this.props.data} />\n          <div className=\"AddListModal--div-buttonContainer\">\n            <button type=\"submit\">Save</button>\n            <button type=\"button\" onClick={() => this.props.closeModal()}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapDispatchToProps = { closeModal };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(EditListModal);\n","import React, { Component } from 'react';\nimport AddListModal from './AddList';\nimport DeleteItemModal from './DeleteItem';\nimport EditListModal from './EditList';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { deleteList, updateList } from '../../redux/actions/listActions';\n\nclass Modals extends Component {\n  shouldComponentUpdate(nextProps) {\n    return Object.keys(nextProps.modals).length !== Object.keys(this.props.modals).length;\n  }\n\n  closeModal = () => {\n    this.props.closeModal();\n  };\n\n  render() {\n    if (this.props.modals.addModal) {\n      return <AddListModal isOpen={true} closeModal={this.closeModal} />;\n    } else if (this.props.modals.deleteListModal) {\n      return (\n        <DeleteItemModal\n          isOpen={true}\n          closeModal={this.closeModal}\n          data={this.props.modals.data.name}\n          onDelete={() => this.props.deleteList(this.props.modals.data.id, this.props.socket)}\n        />\n      );\n    } else if (this.props.modals.editListModal) {\n      return (\n        <EditListModal\n          isOpen={true}\n          closeModal={this.closeModal}\n          data={this.props.modals.data.name}\n          onEdit={newName =>\n            this.props.updateList(this.props.modals.data.id, newName, this.props.socket)\n          }\n        />\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nconst mapStateToProps = ({ modals, lists, socket }) => ({ modals, lists, socket });\nconst mapDispatchToProps = { closeModal, deleteList, updateList };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Modals);\n","import React from 'react';\n\nexport default props => (\n  <div className=\"titlebar--div-container\">\n    <div className=\"titlebar--div-buttongroup\">\n      <button\n        type=\"button\"\n        className={props.visibility === 'active' ? 'titlebar--button-selected' : 'titlebar--button'}\n        onClick={() => props.onUpdate('active')}\n      >\n        Active\n      </button>\n      <button\n        type=\"button\"\n        className={\n          props.visibility === 'completed' ? 'titlebar--button-selected' : 'titlebar--button'\n        }\n        onClick={() => props.onUpdate('completed')}\n      >\n        Completed\n      </button>\n    </div>\n  </div>\n);\n","export const getTasksByListId = listId => {\n  return fetch(`/api/tasks/${listId}`).then(async response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const addTask = (listId, name) => {\n  return fetch(`/api/tasks/create`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ listId, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const toggleTask = (taskId, isCompleted) => {\n  return fetch(`/api/tasks/toggle`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ taskId, isCompleted }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const reorderTasks = (tasks, socket) => {\n  return fetch('/api/tasks/reorderTasks', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ tasks }),\n  }).then(response => {\n    if (socket) {\n      socket.emit('updating', 'tasks');\n    }\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const getTask = taskId => {\n  return fetch(`/api/tasks/single/${taskId}`).then(async response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const updateTaskTitle = (id, name) => {\n  return fetch('/api/tasks/updateTaskTitle', {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const deleteTask = id => {\n  return fetch('/api/tasks/', {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    if (response.ok) {\n      return 'Deleted';\n    }\n  });\n};\n","import React from 'react';\n\nexport default props => {\n  if (props.visibility === 'active') {\n    return (\n      <div className=\"TaskAdd--div-container\">\n        <form onSubmit={e => props.onSubmit(e)}>\n          <input\n            type=\"text\"\n            ref={props.inputRef}\n            placeholder=\"Add a new task here\"\n            defaultValue=\"\"\n            onChange={e => props.onChange(e.target.value)}\n          />\n        </form>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"TaskAdd--div-container-completed\">\n        <button onClick={() => props.onClear()}>Clear Completed</button>\n      </div>\n    );\n  }\n};\n","export const addSubtask = (taskId, name) => {\n  return fetch(`/api/subtasks/create`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ taskId, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const updateSubtask = (id, name) => {\n  return fetch(`/api/subtasks/update`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const deleteSubtask = id => {\n  return fetch(`/api/subtasks/`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const reorderSubTasks = (subtaskArray, socket) => {\n  return fetch('/api/subtasks/reorder', {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ subtaskArray }),\n  }).then(response => {\n    if (response.ok) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const toggleSubTask = (id, isCompleted, socket) => {\n  return fetch('/api/subtasks/toggle', {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, isCompleted }),\n  }).then(response => {\n    if (response.ok) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport * as SubtaskApi from '../../api/subtaskApi';\nimport { toggleSubtask } from '../../redux/actions/subtaskActions';\n\nclass SubtaskDraggables extends PureComponent {\n  state = {\n    classname: '',\n  };\n  toggleSubtask = () => {\n    this._toggleSubtask();\n    this.props.toggleSubtask(\n      this.props.taskId,\n      this.props.item.id,\n      this.refs[this.props.item.id].checked\n    );\n\n    if (this.refs[this.props.item.id].checked) {\n      this.setState({ className: 'subtask--crossed' });\n    } else {\n      this.setState({ className: '' });\n    }\n  };\n\n  _toggleSubtask = debounce(() => {\n    SubtaskApi.toggleSubTask(\n      this.props.item.id,\n      this.refs[this.props.item.id].checked,\n      this.props.socket\n    );\n  }, 300);\n\n  render() {\n    return (\n      <div className=\"subtask--div-draggable-container\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.item.isCompleted}\n          onChange={() => this.toggleSubtask()}\n          ref={this.props.item.id}\n        />\n        <span className={this.props.item.isCompleted ? 'subtask--crossed' : ''}>\n          {this.props.item.name}\n        </span>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = {\n  toggleSubtask,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubtaskDraggables);\n","import * as types from './actionTypes';\nimport * as SubtaskApi from '../../api/subtaskApi';\n\nexport const addNewSubtask = (taskId, name, socket) => async dispatch => {\n  return SubtaskApi.addSubtask(taskId, name).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_SUBTASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const updateSubtask = (id, name, socket) => async dispatch => {\n  return SubtaskApi.updateSubtask(id, name).then(data => {\n    if (data) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const deleteSubtask = (id, taskId, socket) => async dispatch => {\n  return SubtaskApi.deleteSubtask(id).then(data => {\n    if (data) {\n      dispatch({ type: types.DELETE_SUBTASK_SUCCESS, data: { id, taskId } });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const reorderSubtasks = (taskId, subtaskOrder) => async dispatch => {\n  dispatch({ type: types.REORDER_SUBTASKS_SUCCESS, taskId, subtaskOrder });\n};\n\nexport const toggleSubtask = (taskId, id, isCompleted) => async dispatch => {\n  dispatch({ type: types.TOGGLE_SUBTASKS_SUCCESS, taskId, id, isCompleted });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\nimport SubtaskDraggables from './SubtaskDraggables';\nimport { reorderSubtasks } from '../../redux/actions/subtaskActions';\nimport * as SubtaskApi from '../../api/subtaskApi';\n\nclass SubtaskDraggableContainer extends Component {\n  updateSubtasksOrder = result => {\n    if (!result.destination) return;\n    const subtasks = reorder(\n      this.props.tasks.keyHash[this.props.taskId].subtasks.keyOrder,\n      result.source.index,\n      result.destination.index\n    );\n    this.props.reorderSubtasks(this.props.taskId, subtasks);\n    this._updateSubtasksOrder(subtasks);\n  };\n\n  _updateSubtasksOrder = debounce(subtasks => {\n    SubtaskApi.reorderSubTasks(subtasks, this.props.socket);\n  }, 2000);\n\n  render() {\n    return (\n      <div className=\"subtaskDroppable--div-container\">\n        <DragDropContext onDragEnd={this.updateSubtasksOrder}>\n          <Droppable droppableId={this.props.taskId}>\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-subtasksContainer\"\n              >\n                {this.props.tasks.keyHash[this.props.taskId].subtasks.keyOrder.map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <SubtaskDraggables\n                          key={key}\n                          index={index}\n                          taskId={this.props.taskId}\n                          item={this.props.tasks.keyHash[this.props.taskId].subtasks.keyHash[key]}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tasks, socket }) => ({\n  tasks,\n  socket,\n});\n\nconst mapDispatchToProps = { reorderSubtasks };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubtaskDraggableContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleTask } from '../../redux/actions/taskActions';\nimport SubtaskDraggableContainer from './SubtaskDraggableContainer';\n\nclass Task extends Component {\n  toggleTasks() {\n    this.props.toggleTask(this.props.item.id, !this.props.item.isCompleted, this.props.socket);\n  }\n\n  render() {\n    return (\n      <div className=\"Task--div-fullcontainer\">\n        <div className=\"Task--div-container\">\n          <input\n            type=\"checkbox\"\n            checked={this.props.item.isCompleted}\n            onChange={() => this.toggleTasks()}\n            ref={this.props.item.id}\n          />\n          <span>{this.props.item.name}</span>\n          <Link\n            to={`/task/edit/${this.props.item.id}`}\n            className=\"fas fa-edit Task--div-editLink\"\n          />\n        </div>\n        <SubtaskDraggableContainer taskId={this.props.item.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = {\n  toggleTask,\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(Task);\n","import * as types from './actionTypes';\nimport * as TaskApi from '../../api/taskApi';\n\nexport const getTasks = listId => async dispatch => {\n  await TaskApi.getTasksByListId(listId).then(data => {\n    if (data) {\n      dispatch({ type: types.GET_TASK_SUCCESS, data });\n    }\n  });\n};\n\nexport const addTask = (listId, name, socket) => async dispatch => {\n  await TaskApi.addTask(listId, name).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_TASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const getTask = taskId => async dispatch => {\n  await TaskApi.getTask(taskId).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_TASK_SUCCESS, data });\n    }\n  });\n};\n\nexport const toggleTask = (taskId, isCompleted, socket) => async dispatch => {\n  await TaskApi.toggleTask(taskId, isCompleted).then(data => {\n    if (data) {\n      dispatch({ type: types.TOGGLE_TASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const reorderTasks = (taskArray, visibility) => async dispatch => {\n  if (visibility === 'active') {\n    dispatch({ type: types.UPDATE_ACTIVE_TASK_ORDER, data: taskArray });\n  } else {\n    dispatch({ type: types.UPDATE_COMPLETED_TASK_ORDER, data: taskArray });\n  }\n};\n\nexport const updateTaskTitle = (id, name, socket) => async dispatch => {\n  return TaskApi.updateTaskTitle(id, name).then(data => {\n    if (data) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const deleteTask = (id, socket) => async dispatch => {\n  return TaskApi.deleteTask(id).then(data => {\n    if (data) {\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Prompt } from 'react-router-dom';\nimport { getTasks, addTask, reorderTasks } from '../../redux/actions/taskActions';\nimport { clearCompletedTasks } from '../../redux/actions/listActions';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport isEqual from 'react-fast-compare';\nimport TaskAdd from './TaskAdd';\nimport { toast } from 'react-toastify';\nimport Task from './Task';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\nimport * as TaskApi from '../../api/taskApi';\n\nclass TaskDraggableContainer extends Component {\n  state = { listId: '', inputValue: '' };\n  componentDidMount() {\n    this.props.getTasks(this.props.listId);\n    if (this.props.socket) {\n      this.props.socket.on('tasks', () => this.props.getTasks(this.props.listId));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.socket) {\n      this.props.socket.off('tasks');\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      !isEqual(nextProps.tasks, this.props.tasks) ||\n      this.props.visibility !== nextProps.visibility ||\n      nextProps.listId !== this.props.listId ||\n      nextState.inputValue !== this.state.inputValue\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.state.listId !== this.props.listId) {\n      this.props.getTasks(this.props.listId);\n      this.setState({ listId: this.props.listId });\n    }\n  }\n\n  updateTasksOrder = result => {\n    if (!result.destination) return;\n    const tasks = reorder(this.visibleTasks(), result.source.index, result.destination.index);\n    this.props.reorderTasks(tasks, this.props.visibility);\n    this._reorderTask(tasks);\n  };\n\n  _reorderTask = debounce(tasks => {\n    TaskApi.reorderTasks(tasks, this.props.socket);\n  }, 2000);\n\n  visibleTasks = () => {\n    return this.props.visibility === 'active'\n      ? this.props.tasks.activeTasks\n      : this.props.tasks.completedTasks;\n  };\n\n  addNewTask = e => {\n    e.preventDefault();\n    const newTask = this.newTask.value;\n    if (\n      newTask === '' ||\n      newTask === undefined ||\n      newTask === null ||\n      !newTask.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.warn('Nothing is entered. Please try again.');\n    }\n    if (newTask.length > 255) {\n      return toast.warn(\"Sorry, please don't type in a paragraph. Max 255 characters.\");\n    }\n    toast.success(`${newTask} has been added successfully.`);\n    this.props.addTask(this.props.listId, newTask, this.props.socket);\n    this.newTask.value = '';\n  };\n\n  clearCompletedTasks = () => {\n    const confirmation = window.confirm(\n      'This will permanently clear all completed task in this list, are you sure?'\n    );\n    if (confirmation) {\n      this.props.clearCompletedTasks(this.props.listId, this.props.socket);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.updateTasksOrder}>\n          <Droppable droppableId=\"droppableTasks\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-tasksContainer\"\n              >\n                <TaskAdd\n                  onClear={() => this.clearCompletedTasks()}\n                  onSubmit={this.addNewTask}\n                  inputRef={input => (this.newTask = input)}\n                  visibility={this.props.visibility}\n                  onChange={e => this.setState({ inputValue: e })}\n                />\n                <Prompt\n                  when={this.state.inputValue.length !== 0}\n                  message=\"Are you sure? You have not added the new task.\"\n                />\n                {this.visibleTasks().map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Task item={this.props.tasks.keyHash[key]} />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ visibility, tasks, socket }) => ({\n  visibility,\n  tasks,\n  socket,\n});\n\nconst mapDispatchToProps = {\n  getTasks,\n  addTask,\n  clearCompletedTasks,\n  reorderTasks,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskDraggableContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { updateVisibility } from '../../redux/actions/visibilityActions';\nimport TitleBar from './TitleBar';\nimport TaskDraggableContainer from '../Task/TaskDraggableContainer';\n\nclass TaskContainer extends Component {\n  componentDidMount() {\n    this.props.toggleMenu(false);\n  }\n  shouldComponentUpdate(nextProps) {\n    return (\n      !nextProps.lists.keyHash[nextProps.match.params.id] ||\n      nextProps.match.params.id !== this.props.match.params.id ||\n      nextProps.visibility !== this.props.visibility\n    );\n  }\n\n  componentDidUpdate() {\n    this.props.toggleMenu(false);\n  }\n\n  render() {\n    if (!this.props.lists.keyHash[this.props.match.params.id]) {\n      return <Redirect to=\"/NotFound\" />;\n    }\n    return (\n      <div className=\"task--div-full-container\">\n        <TitleBar\n          name={this.props.lists.keyHash[this.props.match.params.id].name}\n          visibility={this.props.visibility}\n          onUpdate={visibility => this.props.updateVisibility(visibility)}\n        />\n        <TaskDraggableContainer listId={this.props.match.params.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ visibility, lists }) => ({\n  visibility,\n  lists,\n});\n\nconst mapDispatchToProps = {\n  updateVisibility,\n  toggleMenu,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { updateSubtask, deleteSubtask } from '../../redux/actions/subtaskActions';\n\nclass Subtask extends Component {\n  updateSubtask = e => {\n    e.preventDefault();\n    const subtaskNewName = this.refs[this.props.item.id].value;\n    if (\n      subtaskNewName.length === 0 ||\n      subtaskNewName === null ||\n      subtaskNewName === undefined ||\n      !subtaskNewName.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.warn('Task title cannot be empty.');\n    } else if (subtaskNewName.length > 255) {\n      return toast.warn('Must be between 1-255 characters long.');\n    }\n    this.props.updateSubtask(this.props.item.id, subtaskNewName, this.props.socket);\n    toast.success(`${this.props.item.name} has been renamed to \"${subtaskNewName}\".`);\n  };\n\n  deleteSubtask = () => {\n    const confirm = window.confirm(`Delete \"${this.props.item.name}\"?`);\n    if (confirm) {\n      this.props.deleteSubtask(this.props.item.id, this.props.item.TaskId, this.props.socket);\n      toast.success(`${this.props.item.name} has been deleted.`);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Subtask--div-container\">\n        <form onSubmit={e => this.updateSubtask(e)}>\n          <input type=\"text\" defaultValue={this.props.item.name} ref={this.props.item.id} />\n        </form>\n        <button onClick={() => this.deleteSubtask()} className=\"fas fa-trash\" />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = { updateSubtask, deleteSubtask };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link, Prompt } from 'react-router-dom';\nimport { beginApiCall, endApiCall } from '../../redux/actions/apiStatusActions';\nimport { getTask, updateTaskTitle, deleteTask } from '../../redux/actions/taskActions';\nimport { addNewSubtask } from '../../redux/actions/subtaskActions';\nimport Subtask from './Subtask';\nimport { toast } from 'react-toastify';\n\nclass TaskEdit extends Component {\n  state = { inputValue: '' };\n\n  async componentDidMount() {\n    this.props.beginApiCall();\n    if (!this.props.tasks.keyHash[this.props.match.params.id]) {\n      await this.props.getTask(this.props.match.params.id);\n    }\n    this.props.endApiCall();\n  }\n\n  updateTaskTitle = e => {\n    e.preventDefault();\n    const newTitleName = this.refs.taskTitle.value;\n    if (\n      newTitleName.length === 0 ||\n      newTitleName === null ||\n      newTitleName === undefined ||\n      !newTitleName.match(/[a-zA-Z0-9]/g)\n    ) {\n      return toast.warn('Task title cannot be empty.');\n    } else if (newTitleName.length > 255) {\n      return toast.warn('Must be between 1-255 characters long.');\n    }\n    this.props.updateTaskTitle(this.props.match.params.id, newTitleName);\n    toast.success(`Updated task title to ${newTitleName}`);\n  };\n\n  addNewSubtask = e => {\n    e.preventDefault();\n    const newSubtask = this.refs.addNewSubtask.value;\n    if (\n      newSubtask.length === 0 ||\n      newSubtask === null ||\n      newSubtask === undefined ||\n      !newSubtask.match(/[a-zA-Z0-9]/g)\n    ) {\n      return;\n    } else if (newSubtask.length > 255) {\n      toast.warn('Must be between 1-255 characters long.');\n    }\n    this.props.addNewSubtask(this.props.match.params.id, newSubtask);\n    toast.success(`${newSubtask} has been added successfully.`);\n    this.refs.addNewSubtask.value = '';\n  };\n\n  deleteTask = async () => {\n    const confirmation = window.confirm(\n      'Deleting this task will also delete all its subtasks, are you sure?'\n    );\n    if (confirmation) {\n      await this.props.deleteTask(this.props.match.params.id);\n      this.props.history.push(\n        `/list/${this.props.tasks.keyHash[this.props.match.params.id].ListId}`\n      );\n    }\n  };\n\n  render() {\n    if (this.props.apiStatus.isLoading) {\n      return <div>Loading</div>;\n    }\n    const task = this.props.tasks.keyHash[this.props.match.params.id];\n    if (!task) {\n      return <Redirect to=\"/NotFound\" />;\n    }\n\n    return (\n      <div className=\"Edit--div-container\">\n        <div className=\"Edit--div-top-level-edit\">\n          <Link to={`/list/${task.ListId}`}>\n            <i className=\"fas fa-arrow-left\" /> Back\n          </Link>\n          <button onClick={() => this.deleteTask()}>\n            Delete <i className=\"fas fa-trash\" />\n          </button>\n        </div>\n        <Prompt\n          when={this.state.inputValue !== ''}\n          message=\"Are you sure? You have not add the new subtask yet.\"\n        />\n        <form onSubmit={e => this.updateTaskTitle(e)}>\n          <input\n            className=\"Edit--input-task\"\n            type=\"text\"\n            defaultValue={task.name}\n            ref=\"taskTitle\"\n          />\n        </form>\n        <form onSubmit={e => this.addNewSubtask(e)}>\n          <input\n            className=\"Edit--input-subtask\"\n            type=\"text\"\n            placeholder=\"Add a subtask here\"\n            ref=\"addNewSubtask\"\n            onChange={e => this.setState({ inputValue: e.target.value })}\n          />\n        </form>\n        {task.subtasks.keyOrder.map(id => (\n          <Subtask key={id} item={task.subtasks.keyHash[id]} />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tasks, apiStatus }) => ({ tasks, apiStatus });\nconst mapDispatchToProps = {\n  beginApiCall,\n  getTask,\n  endApiCall,\n  addNewSubtask,\n  updateTaskTitle,\n  deleteTask,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskEdit);\n","import * as types from './actionTypes';\n\nexport const beginApiCall = () => {\n  return { type: types.BEGIN_API_CALL };\n};\n\nexport const endApiCall = () => {\n  return { type: types.END_API_CALL };\n};\n\nexport const apiCallError = () => {\n  return { type: types.API_CALL_ERROR };\n};\n\n// Auth Api Calls\nexport const loadingUserCompleted = () => {\n  return { type: types.LOADING_USER_COMPLETE };\n};\n","import React from 'react';\nimport logo from '../../media/bean.png';\n\nexport default () => (\n  <div className=\"Welcome--div-container\">\n    <h1>Welcome to Azuki</h1>\n    <img src={logo} alt=\"Beans\" />\n    <p>To begin, click on the menu on the top left corner.</p>\n  </div>\n);\n","import React, { PureComponent } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PageNotFound from '../common/PageNotFound';\nimport TaskContainer from './TaskContainer';\nimport TaskEdit from '../Task/TaskEdit';\nimport Welcome from '../common/Welcome';\n\nclass Main extends PureComponent {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route path=\"/list/:id\" component={TaskContainer} />\n        <Route\n          path=\"/task/edit/:id\"\n          render={props => <TaskEdit key={props.match.params.id} {...props} />}\n        />\n        <Route component={PageNotFound} />\n      </Switch>\n    );\n  }\n}\n\nexport default Main;\n","import 'react-toastify/dist/ReactToastify.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Header from './common/Header';\nimport Sidebar from './Sidebar';\nimport ReactModal from 'react-modal';\nimport Modals from './modals';\nimport Main from './Main';\n\nReactModal.setAppElement('#root');\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Modals />\n        <Header />\n        <div id=\"outer-container\">\n          <Sidebar />\n          <Main />\n        </div>\n        <ToastContainer autoClose={2000} hideProgressBar />\n      </>\n    );\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default initialState => {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { getUserAndLists } from '../redux/actions/authActions';\nimport { addSocketToApp } from '../redux/actions/socketActions';\nimport Loading from './common/Loading';\nimport Login from './common/Login';\nimport PageNotFound from './common/PageNotFound';\nimport App from './App';\nimport initializeSocket from '../utils/socket';\n\nclass Entry extends Component {\n  componentWillMount() {\n    this.props.getUserAndLists();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.auth.isLoading !== this.props.auth.isLoading;\n  }\n\n  render() {\n    if (this.props.auth.isLoading) {\n      return <Loading />;\n    } else if (!this.props.auth.isLoading && this.props.auth.id) {\n      this.props.addSocketToApp(initializeSocket(this.props.auth.id));\n      return <App />;\n    } else if (!this.props.auth.isLoading && !this.props.auth.id) {\n      return (\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route component={PageNotFound} />\n        </Switch>\n      );\n    }\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = { getUserAndLists, addSocketToApp };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Entry);\n","import Socket from 'socket.io-client';\n\nexport default id => {\n  const socket = Socket();\n  socket.on('connect', () => socket.emit('join', `${id}`));\n  return socket;\n};\n","import * as types from './actionTypes';\nimport * as AuthApi from '../../api/authApi';\nimport { loadingUserCompleted } from './apiStatusActions';\n\nexport const getUserAndLists = () => async dispatch => {\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.lists });\n      }\n      delete data.lists;\n      dispatch({ type: types.GET_USER_SUCCESS, data });\n    })\n    .catch(() => {\n      dispatch(loadingUserCompleted());\n    });\n};\n","import * as types from './actionTypes';\n\nexport const addSocketToApp = socket => async dispatch => {\n  dispatch({ type: types.ADD_SOCKET, data: socket });\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from './redux/configureStore';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport Entry from './components/Entry';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Entry />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/bean.2ff32ac4.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.ec9b161c.gif\";"],"sourceRoot":""}