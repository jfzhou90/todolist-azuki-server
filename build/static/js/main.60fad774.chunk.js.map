{"version":3,"sources":["redux/reducers/initialState.js","redux/actions/actionTypes.js","redux/configureStore.js","redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/list.js","redux/reducers/todos.js","components/common/LoginPage.js","components/common/NotFound.js","components/common/Header.js","utils/draggable.js","api/listApi.js","components/common/ListMenu.js","redux/actions/listActions.js","redux/actions/apiStatusActions.js","components/common/Todo.js","api/todosApi.js","components/common/Todos.js","redux/actions/todosActions.js","components/common/Welcome.js","components/common/Main.js","components/Dashboard.js","components/App.js","redux/actions/authActions.js","api/authApi.js","index.js","media/bean.png"],"names":["reducers_initialState","auth","id","list","todos","ADD_LIST_SUCCESS","GET_USER_SUCCESS","GET_LIST_SUCCESS","DELETE_LIST_SUCCESS","GET_TODOS_SUCCESS","GET_TODOS_FAILED","UPDATE_TODO_SUCCESS","ADD_TODO_SUCCESS","DELETE_TODO_SUCCESS","initialState","combineReducers","state","arguments","length","undefined","action","type","types","data","sort","a","b","order","concat","Object","toConsumableArray","error","objectSpread","defineProperty","newState","listMenu","LoginPage","props","react_default","createElement","className","src","logo","alt","href","NotFound","Header","openMenu","_this","dispatch","toggleMenu","isOpen","onClick","this","react_router_dom","to","img","name","split","Component","connect","_ref","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","map","item","index","reorderLists","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","response","ok","json","addNewList","listName","deleteList","updateList","ListMenu","lists","myInput","React","createRef","validationList","string","match","_callee","event","category","regenerator_default","wrap","_context","prev","next","preventDefault","current","value","abrupt","toast","setState","success","stop","editList","_callee2","newName","_context2","window","prompt","confirm","filtered","filter","info","_reorderList","debounce","ListApi","onDragEnd","_callee3","_context3","destination","source","_this2","BurgerMenu","noOverlay","disableAutoFocus","customCrossIcon","customBurgerIcon","pageWrapId","outerContainerId","onSubmit","ref","react_beautiful_dnd_esm","droppableId","provided","snapshot","assign","droppableProps","innerRef","key","draggableId","draggableProps","dragHandleProps","style","display","flexDirection","placeholder","mapDispatchToProps","asyncToGenerator","mark","catch","console","log","_x","apply","_ref2","_x2","_ref3","_x3","_ref4","Todo","defaultChecked","isCompleted","onChange","toggleTodo","refs","checked","deleteTodo","PureComponent","listId","todoId","Error","addTodo","Todos","input","addtodo_input","params","completed","_toogleTodo","getTodosByListId","textAlign","keys","common_Todo","dataObject","forEach","todo","message","completeStatus","TodosApi","title","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","Welcome","Router","react_router","path","render","common_Todos","exact","component","Dashboard","Fragment","common_Header","common_ListMenu","Main","react_toastify","autoClose","hideProgressBar","App","getUserAndLists","Login","store","createStore","rootReducer","applyMiddleware","thunk","react_redux_es","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.60fad774.chunk.js","sourcesContent":["export default {\n  auth: {\n    id: false,\n  },\n  list: [],\n  todos: {},\n};\n","export const BEGIN_API_CALL = 'BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const UPDATE_LIST_SUCCESS = 'UPDATE_LIST_SUCCESS';\nexport const ADD_LIST_SUCCESS = 'ADD_LIST_SUCCESS';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_LIST_SUCCESS = 'GET_LIST_SUCCESS';\nexport const DELETE_LIST_SUCCESS = 'DELETE_LIST_SUCCESS';\nexport const GET_TODOS_SUCCESS = 'GET_TODOS_SUCCESS';\nexport const GET_TODOS_FAILED = 'GET_TODOS_FAILED';\nexport const UPDATE_TODO_SUCCESS = 'UPDATE_TODO_SUCCESS';\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_FAILED = 'DELETE_TODO_FAILED';\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default initialState => {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport list from './list';\nimport todos from './todos';\nimport { reducer as listMenu } from 'redux-burger-menu';\n\nexport default combineReducers({\n  auth,\n  list,\n  todos,\n  listMenu,\n});\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function authReducer(state = initialState.auth, action) {\n  switch (action.type) {\n    case types.GET_USER_SUCCESS:\n      return action.data;\n    default:\n      return state;\n  }\n}\n","// import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function listReducer(state = initialState.list, action) {\n  switch (action.type) {\n    case types.GET_LIST_SUCCESS:\n      return action.data.sort((a, b) => a.order - b.order);\n    case types.ADD_LIST_SUCCESS:\n      return [...state, action.data];\n    case types.DELETE_LIST_SUCCESS:\n      return action.data;\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function todosReducer(state = initialState.todos, action) {\n  switch (action.type) {\n    case types.GET_TODOS_SUCCESS:\n      return action.data;\n    case types.GET_TODOS_FAILED:\n      return { error: action.error };\n    case types.UPDATE_TODO_SUCCESS:\n      return { ...state, [action.data.id]: action.data };\n    case types.ADD_TODO_SUCCESS:\n      return { ...state, [action.data.id]: action.data };\n    case types.DELETE_TODO_SUCCESS:\n      let newState = { ...state };\n      delete newState[action.data];\n      return newState;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport logo from '../../media/bean.png';\n\nexport default props => (\n  <div className=\"login-body\">\n    <div className=\"login-container \">\n      <img className=\"login-logo\" src={logo} alt=\"Beans\" />\n      Login With\n      <a className=\"login-button-link\" href=\"/auth/google\">\n        Google\n      </a>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default () => <div className=\"not-found--div-container\">404 NOT FOUND</div>;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport logo from '../../media/bean.png';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  openMenu = () => {\n    this.props.dispatch(toggleMenu(!this.props.listMenu.isOpen));\n  };\n  render() {\n    return (\n      <div className=\"header--div-container\">\n        <i className=\"fa fa-bars\" onClick={this.openMenu} />\n        <Link to={'/'}>\n          <h1 className=\"header--h1-title\">\n            <img src={logo} alt=\"bean brand\" /> A z u k i\n          </h1>\n        </Link>\n        <div className=\"header--div-menu\">\n          <img className=\"name\" src={this.props.auth.img} alt=\"profile\" />\n          <div className=\"profile-name\">{this.props.auth.name.split(' ')[0]}</div>\n          <a href=\"/auth/logout\">Logout</a>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ dispatch, auth, listMenu }) => ({ dispatch, auth, listMenu });\n\nexport default connect(mapStateToProps)(Header);\n","export const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  const updatedResult = result.map((item, index) => {\n    return { ...item, order: index + 1 };\n  });\n\n  return updatedResult;\n};\n","export const reorderLists = list => {\n  return fetch('/api/list/reorderList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(list),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const addNewList = listName => {\n  return fetch('/api/list/createList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name: listName }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const deleteList = id => {\n  return fetch(`/api/list/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const updateList = (id, name) => {\n  return fetch(`/api/list/updateListFields`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id: id, name: name }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n","import React, { Component } from 'react';\nimport debounce from 'lodash.debounce';\nimport { connect } from 'react-redux';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { toast } from 'react-toastify';\nimport { reorder } from '../../utils/draggable';\nimport { addNewList, deleteList, updateList } from '../../redux/actions/listActions';\nimport * as ListApi from '../../api/listApi';\n\nclass ListMenu extends Component {\n  state = {\n    lists: this.props.list,\n  };\n\n  myInput = React.createRef();\n\n  validationList = string =>\n    string === undefined || string === '' || string.length >= 16 || !string.match(/[a-zA-Z0-9]/g);\n\n  addNewList = async event => {\n    event.preventDefault(event);\n    if (this.validationList(this.myInput.current.value)) {\n      return toast.error(\n        'Error, unable to add new list, must be between 1 to 16 characters, please try again.'\n      );\n    }\n    const category = this.myInput.current.value;\n    await this.props.addNewList(category);\n    this.myInput.current.value = '';\n    this.setState({\n      lists: this.props.list,\n    });\n    toast.success(`New category '${category}' added successfully`);\n  };\n\n  editList = async item => {\n    const newName = window.prompt('What is the new name of the list?');\n    if (this.validationList(newName)) {\n      return toast.error(\n        'Error, unable to edit list, must be between 1 to 16 characters, please try again.'\n      );\n    }\n    await this.props.updateList(item.id, newName);\n    this.setState({\n      lists: this.props.list.map(list => {\n        if (list.id === item.id) {\n          list.name = newName;\n          return list;\n        } else {\n          return list;\n        }\n      }),\n    });\n    toast.success(`List has been updated to '${newName}'.`);\n  };\n\n  deleteList = item => {\n    const confirmation = window.confirm(`Are you sure to delete '${item.name}?'`);\n    if (confirmation) {\n      const filtered = this.state.lists.filter(list => list.id !== item.id);\n      toast.info(`Deleted '${item.name}' successfully`);\n      this.setState({ lists: filtered });\n      this.props.deleteList(item.id);\n    }\n  };\n\n  _reorderList = debounce(lists => {\n    ListApi.reorderLists(lists);\n  }, 2000);\n\n  onDragEnd = async result => {\n    if (!result.destination) return;\n    const lists = reorder(this.state.lists, result.source.index, result.destination.index);\n    await this._reorderList(lists);\n    this.setState({\n      lists: lists,\n    });\n  };\n\n  render() {\n    return (\n      <Menu\n        noOverlay={true}\n        isOpen={this.props.listMenu.isOpen}\n        disableAutoFocus\n        customCrossIcon={false}\n        customBurgerIcon={false}\n        pageWrapId={'page-wrap'}\n        outerContainerId={'outer-container'}\n      >\n        <div className=\"menu--div-container\">\n          <div className=\"menu--div-addList\">\n            <form onSubmit={event => this.addNewList(event)}>\n              <input type=\"text\" ref={this.myInput} />\n              <button className=\"fas fa-folder-plus\" />\n            </form>\n          </div>\n\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <Droppable droppableId=\"droppableList\">\n              {(provided, snapshot) => (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"menu--div-listContainer\"\n                >\n                  {this.state.lists.map((item, index) => (\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"menu--div-list\"\n                        >\n                          <div className=\"menu--div-list\">\n                            <Link to={`/dashboard/list/${item.id}`}>{item.name}</Link>\n                            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                              {/* To Do - make this into actual modal*/}\n                              <button className=\"far fa-edit\" onClick={() => this.editList(item)} />\n                              <button\n                                className=\"fas fa-trash\"\n                                onClick={() => this.deleteList(item)}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </Menu>\n    );\n  }\n}\n\n// const mapStateToProps = state => state;\nconst mapStateToProps = ({ list, listMenu }) => ({ list, listMenu });\nconst mapDispatchToProps = {\n  addNewList,\n  deleteList,\n  updateList,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListMenu);\n","import * as types from './actionTypes';\nimport * as ListApi from '../../api/listApi';\nimport { beginApiCall, apiCallError } from './apiStatusActions';\n\nexport const addNewList = listName => async dispatch => {\n  dispatch(beginApiCall());\n  return ListApi.addNewList(listName)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.ADD_LIST_SUCCESS, data });\n      }\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n    });\n};\n\nexport const deleteList = id => async dispatch => {\n  dispatch(beginApiCall());\n  return ListApi.deleteList(id)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.DELETE_LIST_SUCCESS, data });\n      }\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n    });\n};\n\nexport const updateList = (id, name) => async dispatch => {\n  dispatch(beginApiCall());\n  return ListApi.updateList(id, name)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.UPDATE_LIST_SUCCESS, data });\n      }\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n    });\n};\n","import * as types from './actionTypes';\n\nexport const beginApiCall = () => {\n  return { type: types.BEGIN_API_CALL };\n};\n\nexport const apiCallError = () => {\n  return { type: types.API_CALL_ERROR };\n};\n","import React, { PureComponent } from 'react';\n\nclass Todo extends PureComponent {\n  render() {\n    return (\n      <div className=\"Todo--div-container\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.isCompleted}\n          ref={`${this.props.id}`}\n          onChange={() => this.props.toggleTodo(this.refs[this.props.id].checked)}\n        />\n        <span className={this.props.isCompleted ? 'todo--span-name completed' : 'todo--span-name'}>\n          {this.props.name}\n        </span>\n        <div className=\"todo--button-container\">\n          <button\n            className=\"far fa-edit deleteTodo-button\"\n            onClick={() => {\n              console.log('Edit is not working atm');\n            }}\n          />\n          <button\n            className=\"fas fa-trash deleteTodo-button\"\n            onClick={() => this.props.deleteTodo()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","export const getTodosByListId = listId => {\n  return fetch(`/api/todos/${listId}`).then(async response => {\n    if (response.ok) {\n      let dataObject = {};\n      await response.json().then(data => {\n        data.forEach(todo => (dataObject[todo.id] = todo));\n      });\n      return dataObject;\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const toggleTodo = (listId, todoId, isCompleted) => {\n  return fetch(`/api/todos/toggle`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ listId, todoId, isCompleted }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const addTodo = (listId, name) => {\n  return fetch(`/api/todos/create`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ listId, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const deleteTodo = id => {\n  return fetch(`/api/todos/`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Todo from './Todo';\nimport {\n  getTodosByListId,\n  toggleTodo,\n  addTodo,\n  deleteTodo,\n} from '../../redux/actions/todosActions';\nimport debounce from 'lodash.debounce';\nimport { toast } from 'react-toastify';\n\nclass Todos extends Component {\n  componentDidMount() {\n    this.props.getTodosByListId(this.props.match.params.id);\n  }\n\n  addTodo = event => {\n    event.preventDefault();\n    let input = this.refs.addtodo_input.value;\n    if (input.length < 1 || input === undefined || input.length > 150) {\n      return toast.error('Must be between 1-150 character long');\n    }\n    this.props.addTodo(this.props.match.params.id, input);\n    this.refs.addtodo_input.value = '';\n    toast.success(`${input} has been added.`);\n  };\n\n  toggleTodo = (todoId, completed) => {\n    this._toogleTodo(todoId, completed);\n  };\n\n  deleteTodo = id => {\n    const confirm = window.confirm('Are you sure?');\n    if (confirm) {\n      this.props.deleteTodo(id);\n    }\n  };\n\n  _toogleTodo = debounce((todoId, completed) => {\n    this.props.toggleTodo(this.props.match.params.id, todoId, completed);\n  }, 300);\n\n  render() {\n    if (this.props.todos.error) {\n      return <h1 style={{ textAlign: 'center' }}>{this.props.todos.error}</h1>;\n    } else if (!this.props.todos.error) {\n      return (\n        <div>\n          <form className=\"todos--div-addTodo\" onSubmit={this.addTodo}>\n            <input type=\"text\" name=\"name\" className=\"todos--add-input\" ref=\"addtodo_input\" />\n            <button className=\"todos--add-button\">Add New</button>\n          </form>\n          <div className=\"todos--div-container\">\n            {Object.keys(this.props.todos).map(key => (\n              <Todo\n                name={this.props.todos[key].name}\n                id={this.props.todos[key].id}\n                isCompleted={this.props.todos[key].isCompleted}\n                toggleTodo={completed => this.toggleTodo(this.props.todos[key].id, completed)}\n                key={this.props.todos[key].id}\n                deleteTodo={() => this.deleteTodo(key)}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    } else {\n      return <div>Loading</div>;\n    }\n  }\n}\nconst mapStateToProps = ({ todos }) => ({ todos });\nconst mapDispatchToProps = {\n  getTodosByListId,\n  toggleTodo,\n  addTodo,\n  deleteTodo,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);\n","import * as types from './actionTypes';\nimport * as TodosApi from '../../api/todosApi';\nimport { beginApiCall, apiCallError } from './apiStatusActions';\n\nexport const getTodosByListId = id => async dispatch => {\n  dispatch(beginApiCall());\n  return TodosApi.getTodosByListId(id)\n    .then(async data => {\n      if (data) {\n        dispatch({ type: types.GET_TODOS_SUCCESS, data });\n      }\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n      dispatch({ type: types.GET_TODOS_FAILED, error: error.message });\n    });\n};\n\nexport const toggleTodo = (listId, todoId, completeStatus) => async dispatch => {\n  dispatch(beginApiCall());\n  return TodosApi.toggleTodo(listId, todoId, completeStatus)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.UPDATE_TODO_SUCCESS, data });\n      }\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n      dispatch({ type: types.GET_TODOS_FAILED, error: error.message });\n    });\n};\n\nexport const addTodo = (listId, title) => async dispatch => {\n  dispatch(beginApiCall());\n  return TodosApi.addTodo(listId, title)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.ADD_TODO_SUCCESS, data });\n      }\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n      dispatch({ type: types.GET_TODOS_FAILED, error: error.message });\n    });\n};\n\nexport const deleteTodo = id => async dispatch => {\n  dispatch(beginApiCall());\n  return TodosApi.deleteTodo(id)\n    .then(() => {\n      dispatch({ type: types.DELETE_TODO_SUCCESS, data: id });\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n      console.log(error);\n      dispatch({ type: types.DELETE_TODO_FAILED, error: error.message });\n    });\n};\n","import React from 'react';\n\nexport default () => (\n  <div className=\"main--div-container\" style={{ textAlign: 'center' }}>\n    MAIN\n  </div>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport Todos from './Todos';\nimport Welcome from '../common/Welcome';\n\nclass Router extends Component {\n  render() {\n    return (\n      <div id=\"page-wrap\">\n        <Switch>\n          <Route\n            path=\"/dashboard/list/:id\"\n            render={props => <Todos key={props.match.params.id} {...props} />}\n          />\n          <Route exact path=\"/dashboard\" component={Welcome} />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\n\nexport default connect(mapStateToProps)(Router);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from './common/Header';\nimport { ToastContainer } from 'react-toastify';\nimport ListMenu from './common/ListMenu';\nimport Main from './common/Main';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <div id=\"outer-container\">\n          <ListMenu />\n          <Main />\n        </div>\n        <ToastContainer autoClose={3000} hideProgressBar />\n      </>\n    );\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { getUserAndLists } from '../redux/actions/authActions';\nimport Login from './common/LoginPage';\nimport NotFound from './common/NotFound';\nimport Dashboard from './Dashboard';\n\nclass App extends Component {\n  componentWillMount() {\n    this.props.getUserAndLists();\n  }\n\n  render() {\n    if (this.props.auth.id) {\n      return (\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Redirect exact from=\"/\" to=\"/dashboard\" />\n          <Route path=\"/*\" component={NotFound} />\n        </Switch>\n      );\n    } else {\n      return (\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n        </Switch>\n      );\n    }\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = { getUserAndLists };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import * as types from './actionTypes';\nimport * as AuthApi from '../../api/authApi';\nimport { beginApiCall, apiCallError } from './apiStatusActions';\n\nexport const getUserAndLists = () => async dispatch => {\n  dispatch(beginApiCall());\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.list });\n      }\n      delete data.list;\n      dispatch({ type: types.GET_USER_SUCCESS, data });\n    })\n    .catch(error => {\n      dispatch(apiCallError(error));\n    });\n};\n","export const getUser = () => {\n  return fetch('/auth/currentUserAndList').then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from './redux/configureStore';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './components/App';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/bean.2ff32ac4.png\";"],"sourceRoot":""}