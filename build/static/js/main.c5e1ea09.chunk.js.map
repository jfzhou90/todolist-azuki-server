{"version":3,"sources":["redux/reducers/initialState.js","redux/actions/actionTypes.js","utils/dataFormat.js","redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/modal.js","redux/reducers/list.js","redux/reducers/socket.js","redux/reducers/task.js","redux/reducers/visibility.js","api/authApi.js","components/common/Loading.js","components/common/Login.js","components/common/PageNotFound.js","components/common/Header.js","components/Sidebar/AddListContainer.js","components/Sidebar/List.js","redux/actions/modalActions.js","api/listApi.js","redux/actions/visibilityActions.js","utils/draggable.js","components/Sidebar/DraggableListContainer.js","redux/actions/listActions.js","components/Sidebar/index.js","components/modals/AddList.js","components/modals/DeleteItem.js","components/modals/EditList.js","components/modals/index.js","components/Main/TitleBar.js","api/taskApi.js","components/Task/TaskAdd.js","components/Task/Task.js","redux/actions/taskActions.js","components/Task/TaskDraggableContainer.js","components/Main/TaskContainer.js","components/Main/index.js","components/App.js","redux/configureStore.js","components/Entry.js","utils/socket.js","redux/actions/authActions.js","redux/actions/apiStatusActions.js","redux/actions/socketActions.js","index.js","media/loading.gif","media/bean.png"],"names":["reducers_initialState","auth","isLoading","socket","modals","errors","lists","keyOrder","keyHash","tasks","activeTasks","completedTasks","visibility","LOADING_USER_COMPLETE","GET_USER_SUCCESS","ADD_SOCKET","OPEN_MODAL","REORDER_LIST","GET_LIST_SUCCESS","ADD_LIST_SUCCESS","UPDATE_LIST_SUCCESS","DELETE_LIST_SUCCESS","GET_TASK_SUCCESS","ADD_TASK_SUCCESS","TOGGLE_TASK_SUCCESS","CLEAR_TASKS_SUCCESS","UPDATE_VISIBILITY","formatDataStructure","data","sort","a","b","order","map","item","id","forEach","addNewData","state","newData","newState","Object","objectSpread","push","formatTaskStructure","filter","task","isCompleted","addNewTask","concat","toConsumableArray","updateToggle","newDataStates","values","combineReducers","arguments","length","undefined","initialState","action","type","types","sidebar","_ref","defineProperty","payload","modalName","getUser","fetch","then","response","ok","json","Error","Loading","react_default","createElement","className","src","loading","alt","Login","logo","href","style","color","PageNotFound","props","Header","toggleMenu","_this","dispatch","isOpen","console","log","onClick","this","react_router_dom","to","img","name","split","Component","connect","AddListContainer","toggleModal","List","location","onEdit","onDelete","openModal","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","closeModal","_ref2","_callee2","_context2","_x2","addNewList","listName","method","headers","Accept","Content-Type","body","JSON","stringify","reorderLists","list","emit","deleteList","updateList","updateVisibility","reorder","startIndex","endIndex","_list$splice","splice","removed","slicedToArray","DraggableListContainer","updateListsOrder","result","destination","source","index","reorderList","_reorderList","debounce","ListApi","editList","_this2","on","getList","off","windowRef","window","pop","setState","_this3","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","assign","droppableProps","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","placeholder","mapDispatchToProps","listArray","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","abrupt","AuthApi","catch","error","_x5","Sidebar","toggleAddModal","nextProps","BurgerMenu","noOverlay","width","disableAutoFocus","customCrossIcon","customBurgerIcon","Sidebar_DraggableListContainer","customStyles","overlay","zIndex","content","top","bottom","left","right","borderRadius","phoneStyle","AddListModal","onSubmit","e","preventDefault","refs","addListInput","value","toast","success","react_modal_lib_default","onRequestClose","shouldCloseOnOverlayClick","screen","autoFocus","PureComponent","DeleteItemModal","info","EditListModal","editListInput","defaultValue","Modals","keys","addModal","AddList","deleteListModal","DeleteItem","editListModal","EditList","newName","Fragment","_ref3","_callee3","_context3","_x3","TitleBar","onUpdate","getTasksByListId","listId","addTask","toggleTask","taskId","reorderTasks","TaskAdd","inputRef","onClear","Task","checked","onChange","toggleTasks","TaskApi","TaskDraggableContainer","updateTasksOrder","visibleTasks","_reorderTask","newTask","warn","getTasks","isEqual","clearCompletedTasks","input","components_Task_Task","_ref6","_callee6","_context6","ListId","_x6","taskArray","TaskContainer","match","params","Task_TaskDraggableContainer","react_router","Main","exact","path","render","component","ReactModal","setAppElement","App","common_Header","components_Sidebar","components_Main","react_toastify","autoClose","hideProgressBar","Entry","getUserAndLists","addSocketToApp","Socket","initializeSocket","components_App","store","createStore","rootReducer","applyMiddleware","thunk","react_redux_es","components_Entry","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c5e1ea09.chunk.js","sourcesContent":["export default {\n  auth: {\n    isLoading: true,\n  },\n  socket: null,\n  modals: {},\n  errors: [],\n  lists: {\n    keyOrder: [],\n    keyHash: {},\n  },\n  tasks: {\n    activeTasks: [],\n    completedTasks: [],\n    keyHash: {},\n  },\n  visibility: 'active',\n};\n","//Apis\nexport const BEGIN_API_CALL = 'BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\n\n//Auth\nexport const BEGIN_LOADING_USER = 'BEGIN_LOADING_USER';\nexport const LOADING_USER_COMPLETE = 'LOADING_USER_COMPLETE';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const ADD_SOCKET = 'ADD_SOCKET';\n\n//Modals\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\n//Lists\nexport const REORDER_LIST = 'REORDER_LIST';\nexport const GET_LIST_SUCCESS = 'GET_LIST_SUCCESS';\nexport const ADD_LIST_SUCCESS = 'ADD_LIST_SUCCESS';\nexport const UPDATE_LIST_SUCCESS = 'UPDATE_LIST_SUCCESS';\nexport const DELETE_LIST_SUCCESS = 'DELETE_LIST_SUCCESS';\n\n//Tasks\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS';\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\nexport const TOGGLE_TASK_SUCCESS = 'TOGGLE_TASK_SUCCESS';\nexport const CLEAR_TASKS_SUCCESS = 'CLEAR_TASKS_SUCCESS';\nexport const UPDATE_ACTIVE_TASK_ORDER = 'UPDATE_ACTIVE_TASK_ORDER';\nexport const UPDATE_COMPLETED_TASK_ORDER = 'UPDATE_COMPLETED_TASK_ORDER';\n\n//Visibility\nexport const UPDATE_VISIBILITY = 'UPDATE_VISIBILITY';\n","export const formatDataStructure = data => {\n  const keyOrder = data.sort((a, b) => a.order - b.order).map(item => item.id);\n  const keyHash = {};\n  data.forEach(item => (keyHash[item.id] = item));\n\n  return { keyOrder, keyHash };\n};\n\nexport const addNewData = (state, newData) => {\n  const newState = { ...state };\n  newState.keyOrder.push(newData.id);\n  newState.keyHash[newData.id] = newData;\n  return newState;\n};\n\nexport const formatTaskStructure = data => {\n  const activeTasks = data\n    .filter(task => !task.isCompleted)\n    .sort((a, b) => a.order - b.order)\n    .map(item => item.id);\n\n  const completedTasks = data\n    .filter(task => task.isCompleted)\n    .sort((a, b) => a.order - b.order)\n    .map(item => item.id);\n\n  const keyHash = {};\n  data.forEach(item => (keyHash[item.id] = item));\n\n  return { activeTasks, completedTasks, keyHash };\n};\n\nexport const addNewTask = (state, newData) => {\n  const newState = { ...state };\n  newState.activeTasks = [...newState.activeTasks, newData.id];\n  newState.keyHash[newData.id] = newData;\n\n  return newState;\n};\n\nexport const updateToggle = (state, newData) => {\n  const newDataStates = Object.values(state.keyHash).map(task =>\n    task.id === newData.id ? newData : task\n  );\n\n  return formatTaskStructure(newDataStates);\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport lists from './list';\nimport modals from './modal';\nimport socket from './socket';\nimport tasks from './task';\nimport visibility from './visibility';\nimport { reducer as sidebar } from 'redux-burger-menu';\n\nexport default combineReducers({\n  auth,\n  sidebar,\n  modals,\n  lists,\n  socket,\n  tasks,\n  visibility,\n});\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function authReducer(state = initialState.auth, action) {\n  switch (action.type) {\n    case types.LOADING_USER_COMPLETE:\n      return { isLoading: false };\n    case types.GET_USER_SUCCESS:\n      return { ...action.data, isLoading: false };\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function listReducer(state = initialState.lists, action) {\n  switch (action.type) {\n    case types.OPEN_MODAL:\n      return { [action.payload.modalName]: true, data: action.payload.data };\n    default:\n      return {};\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\nimport { formatDataStructure, addNewData } from '../../utils/dataFormat';\n\nexport default function listReducer(state = initialState.lists, action) {\n  switch (action.type) {\n    case types.UPDATE_LIST_SUCCESS:\n    case types.DELETE_LIST_SUCCESS:\n    case types.GET_LIST_SUCCESS:\n      return formatDataStructure(action.data);\n    case types.ADD_LIST_SUCCESS:\n      return addNewData(state, action.data);\n    case types.REORDER_LIST:\n      return { ...state, keyOrder: action.data };\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function socketReducer(state = initialState.socket, action) {\n  switch (action.type) {\n    case types.ADD_SOCKET:\n      return action.data;\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\nimport { addNewTask, formatTaskStructure, updateToggle } from '../../utils/dataFormat';\n\nexport default function taskReducer(state = initialState.tasks, action) {\n  switch (action.type) {\n    case types.CLEAR_TASKS_SUCCESS:\n    case types.GET_TASK_SUCCESS:\n      return formatTaskStructure(action.data);\n    case types.ADD_TASK_SUCCESS:\n      return addNewTask(state, action.data);\n    case types.TOGGLE_TASK_SUCCESS:\n      return updateToggle(state, action.data);\n    default:\n      return state;\n  }\n}\n","import initialState from './initialState';\nimport * as types from '../actions/actionTypes';\n\nexport default function socketReducer(state = initialState.visibility, action) {\n  switch (action.type) {\n    case types.UPDATE_VISIBILITY:\n      return action.visibility;\n    default:\n      return state;\n  }\n}\n","export const getUser = () => {\n  return fetch('/auth/currentUserAndList').then(response => {\n    if (response && response.ok) {\n      return response.json();\n    } else {\n      throw new Error('Could not retrieve user.');\n    }\n  });\n};\n","import React from 'react';\nimport loading from '../../media/loading.gif';\n\nexport default () => (\n  <div className=\"loading--div-container\">\n    <img className=\"loading--img-loading\" src={loading} alt=\"Loading...\" />\n  </div>\n);\n","import React from 'react';\nimport logo from '../../media/bean.png';\n\nexport default () => (\n  <div className=\"login--div-full\">\n    <div className=\"login--div-container\">\n      <img className=\"login--img-logo\" src={logo} alt=\"Beans\" />\n      <span className=\"login--span-title\">Azuki</span>\n      <span className=\"login--span-intro\">Login With</span>\n      <a className=\"login--a-provider\" href=\"/auth/google\">\n        <i className=\"fab fa-google\" /> <span style={{ color: '#4285F4' }}>G</span>\n        <span style={{ color: '#DB4437' }}>o</span>\n        <span style={{ color: '#F4B400' }}>o</span>\n        <span style={{ color: '#4285F4' }}>g</span>\n        <span style={{ color: '#0F9D58' }}>l</span>\n        <span style={{ color: '#DB4437' }}>e</span>\n      </a>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default props => <div className=\"\">NOTFOUND</div>;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  toggleMenu = () => {\n    this.props.dispatch(toggleMenu(!this.props.sidebar.isOpen));\n  };\n\n  shouldComponentUpdate() {\n    return false; // prevent unnecessary re-render due to sidebar props\n  }\n\n  render() {\n    console.log('Header Rendered');\n    return (\n      <div className=\"header--div-container\">\n        <div className=\"header--div-left\">\n          <i className=\"header--i-burger fa fa-bars\" onClick={this.toggleMenu} />\n        </div>\n        <div className=\"header--div-mid\">\n          <Link to={'/'}>\n            <h1 className=\"header--h1-title\">A Z U K I</h1>\n          </Link>\n        </div>\n        <div className=\"header--div-right\">\n          <img className=\"header--img-profile\" src={this.props.auth.img} alt=\"profile\" />\n          <div className=\"header--profile-name\"> {this.props.auth.name.split(' ')[0]} </div>\n          <a href=\"/auth/logout\">Logout</a>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ dispatch, auth, sidebar }) => ({ dispatch, auth, sidebar });\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nexport default props => (\n  <div className=\"sidebar--div-addListContainer\">\n    <button onClick={() => props.toggleModal()}>Add New List</button>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default props => (\n  <div\n    className={\n      props.location === props.item.id ? 'list--div-container-selected' : 'list--div-container'\n    }\n  >\n    <Link to={`/list/${props.item.id}`}>\n      <span className=\"list--span-name\">{props.item.name}</span>\n    </Link>\n    <div className=\"list--div-buttonContainer\">\n      <button className=\"fas fa-edit\" onClick={() => props.onEdit()} />\n      <button className=\"fas fa-trash\" onClick={() => props.onDelete()} />\n    </div>\n  </div>\n);\n","import * as types from './actionTypes';\n\nexport const openModal = (modalName, data) => async dispatch => {\n  dispatch({ type: types.OPEN_MODAL, payload: { modalName, data } });\n};\n\nexport const closeModal = () => async dispatch => {\n  dispatch({ type: types.CLOSE_MODAL });\n};\n","export const addNewList = listName => {\n  return fetch('/api/list/createList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name: listName }),\n  }).then(response => {\n    if (response.ok) {\n      let data = response.json();\n      console.log(data);\n      return data;\n    }\n  });\n};\n\nexport const reorderLists = (list, socket) => {\n  return fetch('/api/list/reorderList', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(list),\n  }).then(response => {\n    if (socket) {\n      socket.emit('updating', 'list');\n    }\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const deleteList = id => {\n  return fetch(`/api/list/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const updateList = (id, name) => {\n  return fetch(`/api/list/updateListFields`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ id, name }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n\nexport const clearCompletedTasks = ListId => {\n  return fetch(`/api/list/clearCompletedTasks`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ ListId }),\n  }).then(response => {\n    return response.ok ? response.json() : undefined;\n  });\n};\n","import * as types from './actionTypes';\n\nexport const updateVisibility = visibility => async dispatch => {\n  dispatch({ type: types.UPDATE_VISIBILITY, visibility });\n};\n","export const reorder = (list, startIndex, endIndex) => {\n  const [removed] = list.splice(startIndex, 1);\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport List from './List';\nimport { openModal } from '../../redux/actions/modalActions';\nimport { reorderList, getList } from '../../redux/actions/listActions';\nimport { updateVisibility } from '../../redux/actions/visibilityActions';\nimport * as ListApi from '../../api/listApi';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\n\nclass DraggableListContainer extends Component {\n  state = { location: null };\n  componentDidMount() {\n    if (this.props.socket) {\n      this.props.socket.on('list', () => this.props.getList());\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.socket) {\n      this.props.socket.off('list');\n    }\n  }\n\n  // shouldComponentUpdate(nextProps) {\n  //   console.table('next', nextProps.lists.keyHash);\n  //   console.table('this', this.props.lists.keyHash);\n  //   return !isEqual(nextProps.lists, this.props.lists);\n  //   // window.location.href.split('/').pop() !== this.state.location\n  // }\n\n  componentDidUpdate() {\n    const windowRef = window.location.href.split('/').pop();\n    if (this.state.location !== windowRef) {\n      this.setState({ location: windowRef });\n    }\n  }\n\n  updateListsOrder = result => {\n    if (!result.destination) return;\n    const lists = reorder(this.props.lists.keyOrder, result.source.index, result.destination.index);\n    this.props.reorderList(lists);\n    this._reorderList(lists);\n  };\n\n  _reorderList = debounce(lists => {\n    ListApi.reorderLists(lists, this.props.socket);\n  }, 2000);\n\n  deleteList = item => {\n    this.props.openModal('deleteListModal', item);\n  };\n\n  editList = item => {\n    this.props.openModal('editListModal', item);\n  };\n\n  render() {\n    console.log('DraggableList rendered');\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.updateListsOrder}>\n          <Droppable droppableId=\"droppableList\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-listContainer\"\n              >\n                {this.props.lists.keyOrder.map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <List\n                          location={this.state.location}\n                          item={this.props.lists.keyHash[key]}\n                          onDelete={() => this.deleteList(this.props.lists.keyHash[key])}\n                          onEdit={() => this.editList(this.props.lists.keyHash[key])}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ lists, socket, sidebar }) => ({\n  lists,\n  socket,\n  sidebar,\n});\n\nconst mapDispatchToProps = {\n  openModal,\n  reorderList,\n  getList,\n  updateVisibility,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DraggableListContainer);\n","import * as types from './actionTypes';\nimport * as ListApi from '../../api/listApi';\nimport * as AuthApi from '../../api/authApi';\n\nexport const addNewList = (listName, socket) => async dispatch => {\n  return ListApi.addNewList(listName)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.ADD_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const deleteList = (id, socket) => async dispatch => {\n  return ListApi.deleteList(id)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.DELETE_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const updateList = (id, name, socket) => async dispatch => {\n  return ListApi.updateList(id, name)\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.UPDATE_LIST_SUCCESS, data });\n        if (socket) {\n          socket.emit('updating', 'list');\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const reorderList = listArray => async dispatch => {\n  dispatch({ type: types.REORDER_LIST, data: listArray });\n};\n\nexport const getList = () => async dispatch => {\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.list });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const clearCompletedTasks = (listId, socket) => async dispatch => {\n  return ListApi.clearCompletedTasks(listId).then(data => {\n    if (data) {\n      dispatch({ type: types.CLEAR_TASKS_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n","import React, { Component } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { connect } from 'react-redux';\nimport AddListContainer from './AddListContainer';\nimport DraggableListContainer from './DraggableListContainer';\nimport { openModal } from '../../redux/actions/modalActions';\n\nclass Sidebar extends Component {\n  toggleAddModal = () => {\n    this.props.openModal('addModal');\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.sidebar.isOpen !== this.props.sidebar.isOpen;\n  }\n\n  render() {\n    console.log('Sidebar Rendered');\n    return (\n      <div>\n        <Menu\n          noOverlay={true}\n          isOpen={this.props.sidebar.isOpen}\n          width={'300px'}\n          disableAutoFocus\n          customCrossIcon={false}\n          customBurgerIcon={false}\n        >\n          <AddListContainer toggleModal={this.toggleAddModal} />\n          <DraggableListContainer />\n        </Menu>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ sidebar }) => ({ sidebar });\nconst mapDispatchToProps = { openModal };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { addNewList } from '../../redux/actions/listActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: { top: '43%', bottom: '40%', left: '30%', right: '30%', borderRadius: '20px' },\n};\n\nconst phoneStyle = { top: '10%', bottom: 'auto', left: '10%', right: '10%', borderRadius: '20px' };\n\nclass AddListModal extends PureComponent {\n  onSubmit = async e => {\n    e.preventDefault();\n    const name = this.refs.addListInput.value;\n    if (name === undefined || name === null || name.length === 0 || name.length > 16) {\n      return toast.error('Must be 1-16 character long.');\n    }\n    await this.props.addNewList(name, this.props.socket);\n    toast.success(`${name} has been added.`);\n    this.props.closeModal();\n  };\n\n  render() {\n    console.log('AddModal rendered');\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 500 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <form className=\"AddListModal--div-container\" onSubmit={e => this.onSubmit(e)}>\n          <h1>Enter the title of the new list:</h1>\n          <input type=\"text\" ref=\"addListInput\" autoFocus />\n          <div className=\"AddListModal--div-buttonContainer\">\n            <button type=\"button\" onClick={() => this.props.closeModal()}>\n              Cancel\n            </button>\n            <button type=\"submit\">Save</button>\n          </div>\n        </form>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = { closeModal, addNewList };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddListModal);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: { top: '43%', bottom: '40%', left: '30%', right: '30%', borderRadius: '20px' },\n};\n\nconst phoneStyle = { top: '43%', bottom: 'auto', left: '10%', right: '10%', borderRadius: '20px' };\n\nclass DeleteItemModal extends PureComponent {\n  onDelete = name => {\n    toast.info(`${name} has been deleted`);\n    this.props.onDelete();\n    this.props.closeModal();\n  };\n  render() {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 500 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <div className=\"deleteItem--div-container\">\n          <h1>Are you sure you want to delete</h1>\n          <strong>{this.props.data}?</strong>\n          <div className=\"deleteItem--div-button-container\">\n            <button onClick={() => this.onDelete(this.props.data)}>Delete</button>\n            <button onClick={this.props.closeModal}>Cancel</button>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapDispatchToProps = { closeModal };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DeleteItemModal);\n","import React, { PureComponent } from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { toast } from 'react-toastify';\n\nconst customStyles = {\n  overlay: { zIndex: '2000' },\n  content: { top: '43%', bottom: '40%', left: '30%', right: '30%', borderRadius: '20px' },\n};\n\nconst phoneStyle = { top: '10%', bottom: 'auto', left: '10%', right: '10%', borderRadius: '20px' };\n\nclass EditListModal extends PureComponent {\n  onSubmit = async e => {\n    e.preventDefault();\n    const name = this.refs.editListInput.value;\n    if (this.props.data === name) {\n      return this.props.closeModal();\n    }\n    if (name === undefined || name === null || name.length === 0 || name.length > 16) {\n      return toast.error('Must be 1-16 character long.');\n    }\n    await this.props.onEdit(name);\n    toast.success(`${this.props.data} has been renamed to ${name}.`);\n    this.props.closeModal();\n  };\n\n  render() {\n    console.log('EditListModal rendered');\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.closeModal}\n        shouldCloseOnOverlayClick={true}\n        style={window.screen.width > 500 ? customStyles : { ...customStyles, content: phoneStyle }}\n      >\n        <form className=\"AddListModal--div-container\" onSubmit={e => this.onSubmit(e)}>\n          <h1>\n            Rename <strong>{this.props.data}</strong> to?\n          </h1>\n          <input type=\"text\" ref=\"editListInput\" autoFocus defaultValue={this.props.data} />\n          <div className=\"AddListModal--div-buttonContainer\">\n            <button type=\"submit\">Save</button>\n            <button type=\"button\" onClick={() => this.props.closeModal()}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </ReactModal>\n    );\n  }\n}\n\nconst mapDispatchToProps = { closeModal };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(EditListModal);\n","import React, { Component } from 'react';\nimport AddListModal from './AddList';\nimport DeleteItemModal from './DeleteItem';\nimport EditListModal from './EditList';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../../redux/actions/modalActions';\nimport { deleteList, updateList } from '../../redux/actions/listActions';\n\nclass Modals extends Component {\n  shouldComponentUpdate(nextProps) {\n    return Object.keys(nextProps.modals).length !== Object.keys(this.props.modals).length;\n  }\n\n  closeModal = () => {\n    this.props.closeModal();\n  };\n\n  render() {\n    console.log('Modals Rendered');\n    if (this.props.modals.addModal) {\n      return <AddListModal isOpen={true} closeModal={this.closeModal} />;\n    } else if (this.props.modals.deleteListModal) {\n      return (\n        <DeleteItemModal\n          isOpen={true}\n          closeModal={this.closeModal}\n          data={this.props.modals.data.name}\n          onDelete={() => this.props.deleteList(this.props.modals.data.id, this.props.socket)}\n        />\n      );\n    } else if (this.props.modals.editListModal) {\n      return (\n        <EditListModal\n          isOpen={true}\n          closeModal={this.closeModal}\n          data={this.props.modals.data.name}\n          onEdit={newName =>\n            this.props.updateList(this.props.modals.data.id, newName, this.props.socket)\n          }\n        />\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nconst mapStateToProps = ({ modals, lists, socket }) => ({ modals, lists, socket });\nconst mapDispatchToProps = { closeModal, deleteList, updateList };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Modals);\n","import React from 'react';\n\nexport default props => (\n  <div className=\"titlebar--div-container\">\n    <div className=\"titlebar--div-buttongroup\">\n      <button\n        type=\"button\"\n        className={props.visibility === 'active' ? 'titlebar--button-selected' : 'titlebar--button'}\n        onClick={() => props.onUpdate('active')}\n      >\n        Active\n      </button>\n      <button\n        type=\"button\"\n        className={\n          props.visibility === 'completed' ? 'titlebar--button-selected' : 'titlebar--button'\n        }\n        onClick={() => props.onUpdate('completed')}\n      >\n        Completed\n      </button>\n    </div>\n  </div>\n);\n","export const getTasksByListId = listId => {\n  return fetch(`/api/tasks/${listId}`).then(async response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const addTask = (listId, name) => {\n  return fetch(`/api/tasks/create`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ listId, name }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const toggleTask = (taskId, isCompleted) => {\n  return fetch(`/api/tasks/toggle`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ taskId, isCompleted }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('An Error occured with the API');\n    }\n  });\n};\n\nexport const reorderTasks = (tasks, socket) => {\n  return fetch('/api/tasks/reorderTasks', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ tasks }),\n  }).then(response => {\n    if (socket) {\n      socket.emit('updating', 'tasks');\n    }\n    return response.ok ? response.json() : undefined;\n  });\n};\n","import React from 'react';\n\nexport default props => {\n  if (props.visibility === 'active') {\n    return (\n      <div className=\"TaskAdd--div-container\">\n        <form onSubmit={e => props.onSubmit(e)}>\n          <input type=\"text\" ref={props.inputRef} placeholder=\"Add a new task here\" />\n        </form>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"TaskAdd--div-container-completed\">\n        <button onClick={() => props.onClear()}>Clear Completed</button>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleTask } from '../../redux/actions/taskActions';\n\nclass Task extends Component {\n  toggleTasks() {\n    this.props.toggleTask(this.props.item.id, !this.props.item.isCompleted, this.props.socket);\n  }\n\n  render() {\n    return (\n      <div className=\"Task--div-container\">\n        <input\n          type=\"checkbox\"\n          checked={this.props.item.isCompleted}\n          onChange={() => this.toggleTasks()}\n        />\n        <span>{this.props.item.name}</span>\n        <Link to=\"/\" className=\"fas fa-edit Task--div-editLink\" />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ socket }) => ({ socket });\nconst mapDispatchToProps = {\n  toggleTask,\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(Task);\n","import * as types from './actionTypes';\nimport * as TaskApi from '../../api/taskApi';\n\nexport const getTasks = listId => async dispatch => {\n  await TaskApi.getTasksByListId(listId).then(data => {\n    if (data) {\n      dispatch({ type: types.GET_TASK_SUCCESS, data });\n    }\n  });\n};\n\nexport const addTask = (listId, name, socket) => async dispatch => {\n  await TaskApi.addTask(listId, name).then(data => {\n    if (data) {\n      dispatch({ type: types.ADD_TASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const toggleTask = (taskId, isCompleted, socket) => async dispatch => {\n  await TaskApi.toggleTask(taskId, isCompleted).then(data => {\n    if (data) {\n      dispatch({ type: types.TOGGLE_TASK_SUCCESS, data });\n      if (socket) {\n        socket.emit('updating', 'tasks');\n      }\n    }\n  });\n};\n\nexport const reorderTasks = (taskArray, visibility) => async dispatch => {\n  if (visibility === 'active') {\n    dispatch({ type: types.UPDATE_ACTIVE_TASK_ORDER, data: taskArray });\n  } else {\n    dispatch({ type: types.UPDATE_COMPLETED_TASK_ORDER, data: taskArray });\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTasks, addTask, reorderTasks } from '../../redux/actions/taskActions';\nimport { clearCompletedTasks } from '../../redux/actions/listActions';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport isEqual from 'react-fast-compare';\nimport TaskAdd from './TaskAdd';\nimport { toast } from 'react-toastify';\nimport Task from './Task';\nimport { reorder } from '../../utils/draggable';\nimport debounce from 'lodash.debounce';\nimport * as TaskApi from '../../api/taskApi';\n\nclass TaskDraggableContainer extends Component {\n  state = { listId: '' };\n  componentDidMount() {\n    this.props.getTasks(this.props.listId);\n    if (this.props.socket) {\n      this.props.socket.on('tasks', () => this.props.getTasks(this.props.listId));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.socket) {\n      this.props.socket.off('tasks');\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return (\n      !isEqual(nextProps.tasks, this.props.tasks) ||\n      this.props.visibility !== nextProps.visibility ||\n      nextProps.listId !== this.props.listId\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.state.listId !== this.props.listId) {\n      this.props.getTasks(this.props.listId);\n      this.setState({ listId: this.props.listId });\n    }\n  }\n\n  updateTasksOrder = result => {\n    if (!result.destination) return;\n    const tasks = reorder(this.visibleTasks(), result.source.index, result.destination.index);\n    this.props.reorderTasks(tasks, this.props.visibility);\n    this._reorderTask(tasks);\n  };\n\n  _reorderTask = debounce(tasks => {\n    TaskApi.reorderTasks(tasks, this.props.socket);\n  }, 2000);\n\n  visibleTasks = () => {\n    return this.props.visibility === 'active'\n      ? this.props.tasks.activeTasks\n      : this.props.tasks.completedTasks;\n  };\n\n  addNewTask = e => {\n    e.preventDefault();\n    const newTask = this.newTask.value;\n    if (newTask === '' || undefined || null) {\n      return toast.warn('Nothing is entered. Please try again.');\n    }\n    if (newTask.length > 255) {\n      return toast.warn(\"Sorry, please don't type in a paragraph. Max 255 characters.\");\n    }\n    toast.success(`${newTask} has been added successfully.`);\n    this.props.addTask(this.props.listId, newTask, this.props.socket);\n    this.newTask.value = '';\n  };\n\n  render() {\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.updateTasksOrder}>\n          <Droppable droppableId=\"droppableTasks\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"Droppable--div-tasksContainer\"\n              >\n                <TaskAdd\n                  onClear={() =>\n                    this.props.clearCompletedTasks(this.props.listId, this.props.socket)\n                  }\n                  onSubmit={this.addNewTask}\n                  inputRef={input => (this.newTask = input)}\n                  visibility={this.props.visibility}\n                />\n                {this.visibleTasks().map((key, index) => (\n                  <Draggable key={key} index={index} draggableId={key}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Task item={this.props.tasks.keyHash[key]} />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ visibility, tasks, socket }) => ({\n  visibility,\n  tasks,\n  socket,\n});\n\nconst mapDispatchToProps = {\n  getTasks,\n  addTask,\n  clearCompletedTasks,\n  reorderTasks,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskDraggableContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { action as toggleMenu } from 'redux-burger-menu';\nimport { updateVisibility } from '../../redux/actions/visibilityActions';\nimport TitleBar from './TitleBar';\nimport TaskDraggableContainer from '../Task/TaskDraggableContainer';\n\nclass TaskContainer extends Component {\n  componentDidMount() {\n    this.props.toggleMenu(false);\n  }\n  shouldComponentUpdate(nextProps) {\n    return (\n      !nextProps.lists.keyHash[nextProps.match.params.id] ||\n      nextProps.match.params.id !== this.props.match.params.id ||\n      nextProps.visibility !== this.props.visibility\n    );\n  }\n\n  componentDidUpdate() {\n    this.props.toggleMenu(false);\n  }\n\n  render() {\n    if (!this.props.lists.keyHash[this.props.match.params.id]) {\n      return <Redirect to=\"/NotFound\" />;\n    }\n    return (\n      <div className=\"task--div-full-container\">\n        <TitleBar\n          name={this.props.lists.keyHash[this.props.match.params.id].name}\n          visibility={this.props.visibility}\n          onUpdate={visibility => this.props.updateVisibility(visibility)}\n        />\n        <TaskDraggableContainer listId={this.props.match.params.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ visibility, lists }) => ({\n  visibility,\n  lists,\n});\n\nconst mapDispatchToProps = {\n  updateVisibility,\n  toggleMenu,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskContainer);\n","import React, { PureComponent } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PageNotFound from '../common/PageNotFound';\nimport TaskContainer from './TaskContainer';\n\nclass Main extends PureComponent {\n  render() {\n    console.log('Main router Rendered');\n    return (\n      <Switch>\n        <Route exact path=\"/\" render={() => <div>MAIN</div>} />\n        <Route path=\"/list/:id\" component={TaskContainer} />\n        <Route component={PageNotFound} />\n      </Switch>\n    );\n  }\n}\n\nexport default Main;\n","import 'react-toastify/dist/ReactToastify.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Header from './common/Header';\nimport Sidebar from './Sidebar';\nimport ReactModal from 'react-modal';\nimport Modals from './modals';\nimport Main from './Main';\n\nReactModal.setAppElement('#root');\nclass App extends Component {\n  render() {\n    console.log('App Rendered');\n    return (\n      <>\n        <Modals />\n        <Header />\n        <div id=\"outer-container\">\n          <Sidebar />\n          <Main />\n        </div>\n        <ToastContainer autoClose={2000} hideProgressBar />\n      </>\n    );\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default initialState => {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { getUserAndLists } from '../redux/actions/authActions';\nimport { addSocketToApp } from '../redux/actions/socketActions';\nimport Loading from './common/Loading';\nimport Login from './common/Login';\nimport PageNotFound from './common/PageNotFound';\nimport App from './App';\nimport initializeSocket from '../utils/socket';\n\nclass Entry extends Component {\n  componentWillMount() {\n    this.props.getUserAndLists();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.auth.isLoading !== this.props.auth.isLoading;\n  }\n\n  render() {\n    if (this.props.auth.isLoading) {\n      console.log('Loading Screen');\n      return <Loading />;\n    } else if (!this.props.auth.isLoading && this.props.auth.id) {\n      console.log('Entry Rendered');\n      this.props.addSocketToApp(initializeSocket(this.props.auth.id));\n      return <App />;\n    } else if (!this.props.auth.isLoading && !this.props.auth.id) {\n      return (\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route component={PageNotFound} />\n        </Switch>\n      );\n    }\n  }\n}\nconst mapStateToProps = ({ auth }) => ({ auth });\nconst mapDispatchToProps = { getUserAndLists, addSocketToApp };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Entry);\n","import Socket from 'socket.io-client';\n\nexport default id => {\n  const socket = Socket();\n  socket.on('connect', () => socket.emit('join', `${id}`));\n  return socket;\n};\n","import * as types from './actionTypes';\nimport * as AuthApi from '../../api/authApi';\nimport { loadingUserCompleted } from './apiStatusActions';\n\nexport const getUserAndLists = () => async dispatch => {\n  return AuthApi.getUser()\n    .then(data => {\n      if (data) {\n        dispatch({ type: types.GET_LIST_SUCCESS, data: data.lists });\n      }\n      delete data.lists;\n      dispatch({ type: types.GET_USER_SUCCESS, data });\n    })\n    .catch(() => {\n      dispatch(loadingUserCompleted());\n    });\n};\n","import * as types from './actionTypes';\n\nexport const beginApiCall = () => {\n  return { type: types.BEGIN_API_CALL };\n};\n\nexport const apiCallError = () => {\n  return { type: types.API_CALL_ERROR };\n};\n\n// Auth Api Calls\nexport const loadingUserCompleted = () => {\n  return { type: types.LOADING_USER_COMPLETE };\n};\n","import * as types from './actionTypes';\n\nexport const addSocketToApp = socket => async dispatch => {\n  dispatch({ type: types.ADD_SOCKET, data: socket });\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from './redux/configureStore';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport Entry from './components/Entry';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Entry />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/loading.ec9b161c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bean.2ff32ac4.png\";"],"sourceRoot":""}